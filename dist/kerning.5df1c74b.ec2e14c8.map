{"version":3,"sources":["../js/kerning.js"],"names":["$","hasSameOrigin","url","replace","match","protocol","user","hostname","port","offset","string","window","location","undefined","substring","fn","findandfilter","selector","ret","filter","add","find","prevObject","parsecss","callback","parseAttributes","parse","str","each","innerHTML","end","disabled","href","mediumApplies","media","get","pathname","search","HTMLtext","styleAttributes","munge","s","rule","processAtRule","trim","split","i","css","length","restore","extend","parsedeclarations","query","style","appendTo","remove","isValidSelector","styleSheet","test","cssText","sheet","cssRules","parseArguments","mungedArguments","a","push","eval","err","munged","index","parsed","decl","slice","join","REbraces","REfull","REatcomment","REcomment_string","REmunged","uid","full","replacement","RE","exec","type","shift","pop","_show","show","hide","which","plugin","arguments","apply","data","$this","removeData","call","queue","dequeue","args","makeArray","name","effects","splice","RESGMLcomment","REnotATag","REtag","tags","tag","attrs","toLowerCase","id","injector","t","splitter","klass","after","text","inject","item","empty","append","methods","init","words","lines","r","children","replaceWith","lettering","method","error","unstack","fontunstack","elem","stack","analyzeStack","elems","generics","baseline","num_fonts","last_resort","inArray","font","testFont","requested_font","baseline_font","span","prepend","baseline_width","width","requested_width","element","Kerning","self","nav","navigator","platform","browserPrefix","document","documentElement","userAgent","indexOf","opera","reduce","pv","cv","osPrefix","_pairs","elements","pairString","usingPairs","els","pairInfo","pairKeys","pairDown","isTransform","pairs","pairElements","pair","char1","nextWord","char2","RegExp","next","html","parent","_repeats","repeatString","usingRepeats","repeatInfo","repeats","repeatElements","repeat","_conditional","usingConditional","fontInfo","fonts","fontElements","elementSet","el","fontInUse","_applyAttribute","attribute","values","conditional","ve","vals","indexValues","keys","transformGroups","custom","valEl","attr","map","val","value","eq","kern","kerning","size","sizes","weight","weights","color","colors","backgroundcolor","transform","transforms","_parse","ignoreParsed","_parsedCSS","property","specificity","action","not","addClass","live","bind","evt","target","refresh","newElementsOnly","jQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA,aAAA,OAAA,CAAA,CAAA,EAAA;AAAA,aAAA,CAAA,OAAA,GAAA,cAAA,OAAA,MAAA,IAAA,qBAAA,MAAA,CAAA,QAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AAAA,wBAAA,CAAA;AAAA,OAAA,GAAA,UAAA,CAAA,EAAA;AAAA,eAAA,CAAA,IAAA,cAAA,OAAA,MAAA,IAAA,CAAA,CAAA,WAAA,KAAA,MAAA,IAAA,CAAA,KAAA,MAAA,CAAA,SAAA,GAAA,QAAA,YAAA,CAAA,CAAA;AAAA,OAAA,EAAA,CAAA,CAAA;AAAA;;AAAA,KAAA,UAAUA,CAAV,EAAUA;AAAAA,OAQL,YAAA;AAGOC,YAAAA,aAAAA,GAAgB,SAAhBA,aAAgB,CAASC,CAAT,EAASA;AAClBA,iBAAAA,CAAAA,KAAQA,CAAAA,CAAIC,OAAJD,CAAY,0CAAZA,EAAwD,UAASE,CAAT,EAAgBC,CAAhB,EAA0BC,CAA1B,EAAgCC,CAAhC,EAA0CC,CAA1C,EAAgDC,CAAhD,EAAwDC,CAAxD,EAAwDA;AAGnHL,mBAFJA,CAAAA,GAAyB,OAAbA,CAAa,GAAMM,MAAAA,CAAOC,QAAPD,CAAgBN,QAAtB,GAAiCA,CAA1DA,EACAG,CAAAA,GAAAA,KAAiBK,CAAjBL,KAAQA,CAARA,GAA8B,EAA9BA,GAAmCA,CAAAA,CAAKM,SAALN,CAAe,CAAfA,CADnCH,EAEIA,CAAAA,KAAaM,MAAAA,CAAOC,QAAPD,CAAgBN,QAA7BA,GACO,EADPA,GAEAE,CAAAA,KAAaI,MAAAA,CAAOC,QAAPD,CAAgBJ,QAA7BA,GACO,EADPA,GAEAC,CAAAA,KAASG,MAAAA,CAAOC,QAAPD,CAAgBH,IAAzBA,GACO,EADPA,GAEGN,CANHG;AAMGH,WATAA,CAARA;AASQA,SAVfD;;AAcJD,QAAAA,CAAAA,CAAEe,EAAFf,CAAKgB,aAALhB,GAAqB,UAASiB,CAAT,EAASA;AACtBC,cAAAA,CAAAA,GAAM,KAAKC,MAAL,CAAYF,CAAZ,EAAsBG,GAAtB,CAA0B,KAAKC,IAAL,CAAUJ,CAAV,CAA1B,CAANC;AAEGA,iBADPA,CAAAA,CAAII,UAAJJ,GAAiBA,CAAAA,CAAII,UAAJJ,CAAeI,UAAhCJ,EACOA,CAAAA;AAAAA,SAHXlB,EAMAA,CAAAA,CAAEe,EAAFf,CAAKuB,QAALvB,GAAgB,UAASwB,CAAT,EAAmBC,CAAnB,EAAmBA;AAC3BC,cAAAA,CAAAA,GAAQ,SAARA,CAAQ,CAASC,CAAT,EAASA;AAAO3B,YAAAA,CAAAA,CAAEuB,QAAFvB,CAAW2B,CAAX3B,EAAgBwB,CAAhBxB;AAAgBwB,WAAxCE;;AAoBG,iBAnBFV,KAAAA,aAAAA,CAAc,OAAdA,EACAY,IADAZ,CACK,YAAA;AACFU,YAAAA,CAAAA,CAAM,KAAKG,SAAXH,CAAAA;AAAWG,WAFdb,EAIAc,GAJAd,GAKAA,aALAA,CAKc,8CALdA,EAMAY,IANAZ,CAMK,YAAA;AAAA,aAEE,KAAKe,QAFP,IAEmB9B,aAAAA,CAAc,KAAK+B,IAAnB/B,CAFnB,IAE+CD,CAAAA,CAAEuB,QAAFvB,CAAWiC,aAAXjC,CAAyB,KAAKkC,KAA9BlC,CAF/C,IAGEA,CAAAA,CAAEmC,GAAFnC,CAAM,KAAKgC,IAAXhC,EAAiB0B,CAAjB1B,CAHF;AAGmB0B,WATxBV,EAWAc,GAXAd,IAaFS,CAAAA,IACCzB,CAAAA,CAAEmC,GAAFnC,CAAMY,QAAAA,CAASwB,QAATxB,GAAkBA,QAAAA,CAASyB,MAAjCrC,EAAyC,MAAzCA,EAAiD,UAASsC,CAAT,EAASA;AACtDC,YAAAA,eAAAA,CAAgBD,CAAhBC,EAA0Bf,CAA1Be,CAAAA;AAA0Bf,WAD9BxB,CAdCgB,EAmBE,IAAA;AAAA,SA3BXhB,EA8BAA,CAAAA,CAAEuB,QAAFvB,GAAa,UAAS2B,CAAT,EAAcH,CAAd,EAAcA;AACnBN,cAAAA,CAAAA,GAAM,EAANA;AACJS,UAAAA,CAAAA,GAAMa,KAAAA,CAAMb,CAANa,CAAAA,CAAWrC,OAAXqC,CAAmB,mCAAnBA,EAAwD,UAASC,CAAT,EAAYC,CAAZ,EAAYA;AAG/D,mBADPC,aAAAA,CAAc3C,CAAAA,CAAE4C,IAAF5C,CAAO0C,CAAP1C,CAAd2C,EAA4BnB,CAA5BmB,CAAAA,EACO,EAAA;AAAA,WAHLH,CAANb,EAMA3B,CAAAA,CAAE4B,IAAF5B,CAAO2B,CAAAA,CAAIkB,KAAJlB,CAAU,KAAVA,CAAP3B,EAAyB,UAAS8C,CAAT,EAAYC,CAAZ,EAAYA;AAAAA,aACjCA,CAAAA,GAAMA,CAAAA,CAAIF,KAAJE,CAAU,KAAVA,CAD2BA,EAEzBC,MAFyBD,GAEhB,CAFgBA,KAGjCA,CAAAA,CAAI,CAAJA,CAAAA,GAASE,OAAAA,CAAQF,CAAAA,CAAI,CAAJA,CAARE,CAATF,EACA7B,CAAAA,CAAI6B,CAAAA,CAAI,CAAJA,CAAJ7B,CAAAA,GAAclB,CAAAA,CAAEkD,MAAFlD,CAASkB,CAAAA,CAAI6B,CAAAA,CAAI,CAAJA,CAAJ7B,CAAAA,IAAe,EAAxBlB,EAA4BmD,iBAAAA,CAAkBJ,CAAAA,CAAI,CAAJA,CAAlBI,CAA5BnD,CAJmB+C;AAI+B,WAJpE/C,CANA2B,EAYAH,CAAAA,CAASN,CAATM,CAZAG;AAYST,SA5CblB,EAyDAA,CAAAA,CAAEuB,QAAFvB,CAAWiC,aAAXjC,GAA4BW,MAAAA,CAAOuB,KAAPvB,IAAgBA,MAAAA,CAAOuB,KAAPvB,CAAayC,KAA7BzC,IAAuC,UAASgB,CAAT,EAASA;AACjE,cAAA,CAACA,CAAD,EAAM,OAAA,CAAO,CAAP;AACNA,cAAAA,CAAAA,IAAOO,KAAPP,EAAc,OAAOO,KAAAA,CAAMP,CAANO,CAAP;AACbmB,cAAAA,CAAAA,GAAQrD,CAAAA,CAAE,mBAAiB2B,CAAjB,GAAqB,kDAAvB3B,CAAAA,CAA2EsD,QAA3EtD,CAAoF,MAApFA,CAARqD;AACGnB,iBAAAA,KAAAA,CAAMP,CAANO,CAAAA,GAAa,CAA2B,KAA1BlC,CAAAA,CAAE,MAAFA,CAAAA,CAAU+C,GAAV/C,CAAc,SAAdA,CAAD,EAA8BqD,CAAAA,CAAME,MAANF,EAA9B,EAA8C,CAA9C,CAAbnB;AAA2D,SA7D1ElC,EAgEAA,CAAAA,CAAEuB,QAAFvB,CAAWwD,eAAXxD,GAA6B,UAAS2B,CAAT,EAASA;AAC9Bc,cAAAA,CAAAA,GAAIzC,CAAAA,CAAE,YAAU2B,CAAV,GAAc,YAAhB3B,CAAAA,CAA8BsD,QAA9BtD,CAAuC,MAAvCA,EAA+C,CAA/CA,CAAJyC;AAEG,iBAAA,CAACA,CAAAA,CAAEgB,UAAFhB,GAAEgB,CAAc,WAAWC,IAAX,CAAgBjB,CAAAA,CAAEgB,UAAFhB,CAAakB,OAA7B,CAAhBlB,GAA6CkB,CAAAA,CAAalB,CAAAA,CAAEmB,KAAFnB,CAAQoB,QAARpB,CAAiBO,MAA5E,EAAoFhD,CAAAA,CAAEyC,CAAFzC,CAAAA,CAAKuD,MAALvD,EAApF,EAAmG,CAAnG,CAAA;AAAmG,SAnE9GA,EAsEAA,CAAAA,CAAEuB,QAAFvB,CAAW8D,cAAX9D,GAA4B,UAAS2B,GAAT,EAASA;AAC9B,cAAA,CAACA,GAAD,EAAM,OAAO,EAAP;;AAEJ,eADDT,IAAAA,GAAAA,GAAM,EAANA,EAAU6C,eAAAA,GAAkBvB,KAAAA,CAAMb,GAANa,EAAMb,CAAK,CAAXa,CAAAA,CAAiBK,KAAjBL,CAAuB,KAAvBA,CAA5BtB,EACK4B,CAAAA,GAAI,CAAR,EAAWA,CAAAA,GAAIiB,eAAAA,CAAgBf,MAA/B,EAA+BA,EAAUF,CAAzC,EAA4C;AACzCkB,gBAAAA,CAAAA,GAAIf,OAAAA,CAAQc,eAAAA,CAAgBjB,CAAhBiB,CAARd,CAAJe;;AACA,gBAAA;AACA9C,cAAAA,GAAAA,CAAI+C,IAAJ/C,CAASgD,IAAAA,CAAK,MAAIF,CAAJ,GAAM,GAAXE,CAAThD;AACF,aAFE,CAEF,OAAMiD,GAAN,EAAMA;AACJjD,cAAAA,GAAAA,CAAI+C,IAAJ/C,CAAS8C,CAAT9C;AAAS8C;AAGV9C;;AAAAA,iBAAAA,GAAAA;AAAAA,SAjFXlB,EAqFAA,CAAAA,CAAEuB,QAAFvB,CAAWuC,eAAXvC,GAA6BuC,eArF7BvC;AAwFIkC,YAAAA,KAAAA,GAAQ,EAARA;AAAAA,YACAkC,MAAAA,GAAS,EADTlC;;AAKKiB,iBAAAA,iBAAAA,CAAkBkB,CAAlBlB,EAAkBkB;AACnB1C,cAAAA,CAAAA,GAAMyC,MAAAA,CAAOC,CAAPD,CAAAA,CAAcjE,OAAdiE,CAAsB,QAAtBA,EAAgC,EAAhCA,CAANzC;AACJA,UAAAA,CAAAA,GAAMa,KAAAA,CAAMb,CAANa,CAANb;AACI2C,cAAAA,CAAAA,GAAS,EAATA;AAMGA,iBALPtE,CAAAA,CAAE4B,IAAF5B,CAAO2B,CAAAA,CAAIkB,KAAJlB,CAAU,GAAVA,CAAP3B,EAAuB,UAAU8C,CAAV,EAAayB,CAAb,EAAaA;AAAAA,aAChCA,CAAAA,GAAOA,CAAAA,CAAK1B,KAAL0B,CAAW,GAAXA,CADyBA,EAExBvB,MAFwBuB,GAEf,CAFeA,KAGhCD,CAAAA,CAAOrB,OAAAA,CAAQsB,CAAAA,CAAK,CAALA,CAARtB,CAAPqB,CAAAA,GAA2BrB,OAAAA,CAAQsB,CAAAA,CAAKC,KAALD,CAAW,CAAXA,EAAcE,IAAdF,CAAmB,GAAnBA,CAARtB,CAHKsB;AAGsB,WAH1DvE,GAKOsE,CAAAA;AAOPI;;AAAAA,YAAAA,QAAAA,GAAW,UAAXA;AAAAA,YACAC,MAAAA,GAAS,qEADTD;AAAAA,YAEAE,WAAAA,GAAc,gCAFdF;AAAAA,YAMAG,gBAAAA,GAAmB,uFANnBH;AAAAA,YAOAI,QAAAA,GAAW,eAPXJ;AAAAA,YAQAK,GAAAA,GAAM,CARNL;;AASKlC,iBAAAA,KAAAA,CAAMb,CAANa,EAAWwC,CAAXxC,EAAWwC;AAChBrD,UAAAA,CAAAA,GAAMA,CAAAA,CACDxB,OADCwB,CACOiD,WADPjD,EACmB,IADnBA,EAEDxB,OAFCwB,CAEOkD,gBAFPlD,EAEyB,UAAUc,CAAV,EAAa/B,CAAb,EAAaA;AAChC,gBAAA,CAACA,CAAD,EAAS,OAAO,EAAP;AACTuE,gBAAAA,CAAAA,GAAc,QAAA,EAASF,GAAT,GAAc,KAA5BE;AAEGA,mBADPb,MAAAA,CAAOW,GAAPX,CAAAA,GAAc1D,CAAAA,CAAOP,OAAPO,CAAe,KAAfA,EAAqB,EAArBA,CAAd0D,EACOa,CAAAA;AAAAA,WANTtD,CAANA;;AAUMvB,eADF8E,IAAAA,CAAAA,GAAKF,CAAAA,GAAOL,MAAPK,GAAgBN,QACnBtE,EAAAA,KAAAA,GAAQ8E,CAAAA,CAAGC,IAAHD,CAAQvD,CAARuD,CAAR9E;AACF6E,YAAAA,WAAAA,GAAc,QAAA,EAASF,GAAT,GAAc,KAA5BE,EACAb,MAAAA,CAAOW,GAAPX,CAAAA,GAAchE,KAAAA,CAAM,CAANA,CADd6E,EAEAtD,CAAAA,GAAMA,CAAAA,CAAIxB,OAAJwB,CAAYuD,CAAZvD,EAAgBsD,WAAhBtD,CAFNsD;AADE7E;;AAKCuB,iBAAAA,CAAAA;AAGFsB;;AAAAA,iBAAAA,OAAAA,CAAQtB,CAARsB,EAAQtB;AACVA,cAAAA,KAAQd,CAARc,KAAAA,CAAAA,EAAmB,OAAOA,CAAP;;AAChBvB,iBAAAA,KAAAA,GAAQ0E,QAAAA,CAASK,IAATL,CAAcnD,CAAdmD,CAAR1E;AACFuB,YAAAA,CAAAA,GAAMA,CAAAA,CAAIxB,OAAJwB,CAAYmD,QAAZnD,EAAsByC,MAAAA,CAAOhE,KAAAA,CAAM,CAANA,CAAPgE,CAAtBzC,CAANA;AADEvB;;AAGCJ,iBAAAA,CAAAA,CAAE4C,IAAF5C,CAAO2B,CAAP3B,CAAAA;AAGF2C;;AAAAA,iBAAAA,aAAAA,CAAeD,CAAfC,EAAqBnB,CAArBmB,EAAqBnB;AACtBqB,cAAAA,CAAAA,GAAQH,CAAAA,CAAKG,KAALH,CAAW,KAAXA,CAARG;AAAAA,cACAuC,CAAAA,GAAOvC,CAAAA,CAAMwC,KAANxC,EADPA;;AAEDuC,cAAM,WAANA,CAAAA,EAAe;AACVrC,gBAAAA,CAAAA,GAAME,OAAAA,CAAQJ,CAAAA,CAAMyC,GAANzC,EAARI,CAAAA,CAAqBuB,KAArBvB,CAA2B,CAA3BA,EAA2B,CAAI,CAA/BA,CAANF;AACD/C,YAAAA,CAAAA,CAAEuB,QAAFvB,CAAWiC,aAAXjC,CAAyB6C,CAAAA,CAAM4B,IAAN5B,CAAW,GAAXA,CAAzB7C,KACCA,CAAAA,CAAEuB,QAAFvB,CAAW+C,CAAX/C,EAAgBwB,CAAhBxB,CADDA;AACiBwB,WAHrB4D,MAKI,IAAU,YAANA,CAAJ,EAAoB;AACnBlF,gBAAAA,CAAAA,GAAM+C,OAAAA,CAAQJ,CAAAA,CAAMwC,KAANxC,EAARI,CAAN/C;AACDF,YAAAA,CAAAA,CAAEuB,QAAFvB,CAAWiC,aAAXjC,CAAyB6C,CAAAA,CAAM4B,IAAN5B,CAAW,GAAXA,CAAzB7C,MACCE,CAAAA,GAAMA,CAAAA,CAAIC,OAAJD,CAAY,cAAZA,EAA4B,EAA5BA,EAAgCC,OAAhCD,CAAwC,cAAxCA,EAAwD,EAAxDA,CAANA,EACAF,CAAAA,CAAEmC,GAAFnC,CAAME,CAANF,EAAW,UAAS2B,CAAT,EAASA;AAAO3B,cAAAA,CAAAA,CAAEuB,QAAFvB,CAAW2B,CAAX3B,EAAgBwB,CAAhBxB;AAAgBwB,aAA3CxB,CAFDA;AAE4CwB;AAOnD+D;;AAAAA,YAAAA,KAAAA,GAAQ;AAACC,UAAAA,IAAAA,EAAMxF,CAAAA,CAAEe,EAAFf,CAAKwF,IAAZ;AAAkBC,UAAAA,IAAAA,EAAMzF,CAAAA,CAAEe,EAAFf,CAAKyF;AAA7B,SAARF;AACJvF,QAAAA,CAAAA,CAAE4B,IAAF5B,CAAO,CAAC,MAAD,EAAS,MAAT,CAAPA,EAAyB,YAAA;AACjB0F,cAAAA,CAAAA,GAAQ,IAARA;AAAAA,cAAcF,CAAAA,GAAOD,KAAAA,CAAMG,CAANH,CAArBG;AAAAA,cAAmCC,CAAAA,GAASD,CAAAA,GAAM,SAAlDA;AACJ1F,UAAAA,CAAAA,CAAEe,EAAFf,CAAK0F,CAAL1F,IAAc,YAAA;AACP4F,mBAAAA,SAAAA,CAAU5C,MAAV4C,GAAmB,CAAnBA,GAA6BJ,CAAAA,CAAKK,KAALL,CAAW,IAAXA,EAAiBI,SAAjBJ,CAA7BI,GACI,KAAKhE,IAAL,CAAU,YAAA;AACTb,kBAAAA,CAAAA,GAAKf,CAAAA,CAAE8F,IAAF9F,CAAO,IAAPA,EAAa2F,CAAb3F,CAALe;AAAAA,kBAA2BgF,CAAAA,GAAQ/F,CAAAA,CAAE,IAAFA,CAAnCe;AACDA,cAAAA,CAAAA,IACCf,CAAAA,CAAEgG,UAAFhG,CAAa,IAAbA,EAAmB2F,CAAnB3F,GACAe,CAAAA,CAAGkF,IAAHlF,CAAQgF,CAARhF,CADAf,EAEA+F,CAAAA,CAAMG,KAANH,CAAY,YAAA;AAAaA,gBAAAA,CAAAA,CAAMD,IAANC,CAAWJ,CAAXI,EAAmBhF,CAAnBgF,EAAuBI,OAAvBJ;AAAuBI,eAAhDJ,CAHDhF,IAKCyE,CAAAA,CAAKS,IAALT,CAAUO,CAAVP,CALDzE;AAKWgF,aAPX,CADJH;AAQeG,WATtB/F,EAaAA,CAAAA,CAAEe,EAAFf,CAAK2F,CAAL3F,IAAe,YAAA;AACPoG,gBAAAA,CAAAA,GAAOpG,CAAAA,CAAEqG,SAAFrG,CAAY4F,SAAZ5F,CAAPoG;AAAAA,gBAA+BE,CAAAA,GAAOF,CAAAA,CAAK,CAALA,CAAtCA;;AACDpG,gBAAAA,CAAAA,CAAEe,EAAFf,CAAKsG,CAALtG,CAAAA,EAAY;AACXoG,cAAAA,CAAAA,CAAKf,KAALe;AACIrF,kBAAAA,CAAAA,GAAKf,CAAAA,CAAEe,EAAFf,CAAKsG,CAALtG,CAALe;AAAUuF,aAFftG,MAGOA,CAAAA,CAAEuG,OAAFvG,IAAaA,CAAAA,CAAEuG,OAAFvG,CAAUsG,CAAVtG,CAAbA,IACe,YAAlB,OAAA,CAAOoG,CAAAA,CAAK,CAALA,CAAP,CAAkB,IAAUA,CAAAA,CAAKI,MAALJ,CAAY,CAAZA,EAAe,CAAfA,EAAkB,EAAlBA,CAAV,EACrBrF,CAAAA,GAAKwE,KAAAA,CAAMG,CAANH,CAFCvF,IAINe,CAAAA,GAAKwE,KAAAA,CAAMG,CAANH,CAJCvF;;AAMH,mBAAA,KAAK8F,IAAL,CAAUH,CAAV,EAAkB,YAAA;AAAa5E,cAAAA,CAAAA,CAAG8E,KAAH9E,CAAS,IAATA,EAAcqF,CAAdrF;AAAcqF,aAA7C,CAAA;AAA6CA,WAxBxDpG;AAwBwDoG,SA1B5DpG;AA+BIyG,YAAAA,aAAAA,GAAgB,uBAAhBA;AAAAA,YACAC,SAAAA,GAAY,WADZD;AAAAA,YAEAE,KAAAA,GAAQ,iBAFRF;;AAIKlE,iBAAAA,eAAAA,CAAgBD,CAAhBC,EAA0Bf,CAA1Be,EAA0Bf;AAC3BN,cAAUmC,CAAVnC;AAAAA,cAAAA,CAAAA,GAAM,EAANA;AAAAA,cAAiB0F,CAAAA,GAAO,EAAxB1F;AAEJsB,UAAAA,KAAAA,CADAF,CAAAA,GAAWA,CAAAA,CAASnC,OAATmC,CAAiBmE,aAAjBnE,EAAgC,EAAhCA,EAAoCnC,OAApCmC,CAA4CoE,SAA5CpE,EAAuD,IAAvDA,CACXE,CAAAA,CAAgBrC,OAAhBqC,CAAwBmE,KAAxBnE,EAA+B,UAASC,CAAT,EAAYoE,CAAZ,EAAiBC,CAAjB,EAAiBA;AAGzCzD,gBAFHwD,CAAAA,GAAMA,CAAAA,CAAIE,WAAJF,EAANA,EACGD,CAAAA,CAAKC,CAALD,CAAAA,GAAKC,EAAQD,CAAAA,CAAKC,CAALD,CAAbA,GAA6BA,CAAAA,CAAKC,CAALD,CAAAA,GAAY,CAD5CC,EAEGxD,CAAAA,GAAQ,6BAA6B8B,IAA7B,CAAkC2B,CAAlC,CAARzD,EAAkD;AAC7C2D,kBAAAA,CAAAA,GAAK,oBAAoB7B,IAApB,CAAyB2B,CAAzB,CAALE;AACIA,cAAAA,CAAAA,GAAJA,CAAAA,GAAS,MAAI/D,OAAAA,CAAQ+D,CAAAA,CAAG,CAAHA,CAAR/D,CAAAA,CAAe9C,OAAf8C,CAAuB,cAAvBA,EAAsC,EAAtCA,CAAb+D,GAAkEH,CAAAA,GAAM,MAANA,IAAgBD,CAAAA,CAAKC,CAALD,CAAAA,GAAU,CAA1BC,IAA+B,GAA7FG,EACR9F,CAAAA,IAAO,CAAC8F,CAAD,EAAK,GAAL,EAAU/D,OAAAA,CAAQI,CAAAA,CAAM,CAANA,CAARJ,CAAAA,CAAkB9C,OAAlB8C,CAA0B,cAA1BA,EAAyC,EAAzCA,CAAV,EAAuD,GAAvD,EAA4DwB,IAA5D,CAAiE,EAAjE,CADCuC;AACgE;AAAA,WANhFxE,GASAxC,CAAAA,CAAEuB,QAAFvB,CAAWkB,CAAXlB,EAAgBwB,CAAhBxB,CATAwC;AASgBhB;AArOvB,OAAA,EARKxB,EA6PL,YAAA;AACYiH,iBAAAA,CAAAA,CAASC,CAATD,EAAYE,CAAZF,EAAsBG,CAAtBH,EAA6BI,CAA7BJ,EAA6BI;AAC9BrD,cAAAA,CAAAA,GAAIkD,CAAAA,CAAEI,IAAFJ,GAASrE,KAATqE,CAAeC,CAAfD,CAAJlD;AAAAA,cAA8BuD,CAAAA,GAAS,EAAvCvD;AACAA,UAAAA,CAAAA,CAAEhB,MAAFgB,KACAhE,CAAAA,CAAEgE,CAAFhE,CAAAA,CAAK4B,IAAL5B,CAAU,UAAS8C,CAAT,EAAY0E,CAAZ,EAAYA;AAClBD,YAAAA,CAAAA,IAAU,kBAAgBH,CAAhB,IAAuBtE,CAAAA,GAAE,CAAzB,IAA4B,IAA5B,GAAiC0E,CAAjC,GAAsC,SAAtC,GAAgDH,CAA1DE;AAA0DF,WAD9DrH,GAGAkH,CAAAA,CAAEO,KAAFP,GAAUQ,MAAVR,CAAiBK,CAAjBL,CAJAlD;AAQJ2D;;AAAAA,YAAAA,CAAAA,GAAU;AACVC,UAAAA,IAAAA,EAAM,gBAAA;AACK,mBAAA,KAAKhG,IAAL,CAAU,YAAA;AACbqF,cAAAA,CAAAA,CAASjH,CAAAA,CAAE,IAAFA,CAATiH,EAAkB,EAAlBA,EAAsB,MAAtBA,EAA8B,EAA9BA,CAAAA;AAA8B,aAD3B,CAAA;AAC2B,WAH5B;AAOVY,UAAAA,KAAAA,EAAO,iBAAA;AACI,mBAAA,KAAKjG,IAAL,CAAU,YAAA;AACbqF,cAAAA,CAAAA,CAASjH,CAAAA,CAAE,IAAFA,CAATiH,EAAkB,GAAlBA,EAAuB,MAAvBA,EAA+B,GAA/BA,CAAAA;AAA+B,aAD5B,CAAA;AAC4B,WAT7B;AAaVa,UAAAA,KAAAA,EAAO,iBAAA;AACI,mBAAA,KAAKlG,IAAL,CAAU,YAAA;AACTmG,kBAAAA,CAAAA,GAAI,kCAAJA;AAKJd,cAAAA,CAAAA,CAASjH,CAAAA,CAAE,IAAFA,CAAAA,CAAQgI,QAARhI,CAAiB,IAAjBA,EAAuBiI,WAAvBjI,CAAmC+H,CAAnC/H,EAAsC8B,GAAtC9B,EAATiH,EAAsDc,CAAtDd,EAAyD,MAAzDA,EAAiE,EAAjEA,CAAAA;AAAiE,aAN9D,CAAA;AAM8D;AApB/D,SAAVU;;AAyBJ3H,QAAAA,CAAAA,CAAEe,EAAFf,CAAKkI,SAALlI,GAAiB,UAASmI,CAAT,EAASA;AAElBA,iBAAAA,CAAAA,IAAUR,CAAAA,CAAQQ,CAARR,CAAVQ,GACOR,CAAAA,CAAQQ,CAARR,CAAAA,CAAgB9B,KAAhB8B,CAAsB,IAAtBA,EAA4B,GAAGnD,KAAH,CAASyB,IAAT,CAAeL,SAAf,EAA0B,CAA1B,CAA5B+B,CADPQ,GAEkB,cAAXA,CAAW,IAAcA,CAAd,IAGtBnI,CAAAA,CAAEoI,KAAFpI,CAAQ,YAAamI,CAAb,GAAsB,qCAA9BnI,GACO,IAJe,IACX2H,CAAAA,CAAQC,IAARD,CAAa9B,KAAb8B,CAAmB,IAAnBA,EAAyB,GAAGnD,KAAH,CAASyB,IAAT,CAAeL,SAAf,EAA0B,CAA1B,CAAzB+B,CAHPQ;AAG0D,SALlEnI;AApCH,OAAA,EA7PKA;AAwTFqI,UAAAA,OAAAA,IACIC,WAAAA,GAAc;AACdV,QAAAA,IAAAA,EAAM,cAASW,CAAT,EAASA;AACPC,cAAAA,CAAAA,GAAQxI,CAAAA,CAAEuI,CAAFvI,CAAAA,CAAQ+C,GAAR/C,CAAY,aAAZA,EAA2BI,KAA3BJ,CAAiC,oBAAjCA,KAA0D,EAAlEwI;AACG,iBAAA,KAAKC,YAAL,CAAkBD,CAAlB,EAAyBD,CAAzB,CAAA;AAAyBA,SAHtB;AAMdE,QAAAA,YAAAA,EAAc,sBAASD,CAAT,EAAgBE,CAAhB,EAAgBA;AACtBC,cAAAA,CAAAA,GAAW,CAAC,WAAD,EAAc,YAAd,EAA4B,OAA5B,EAAqC,SAArC,EAAgD,SAAhD,CAAXA;AAAAA,cACAC,CAAAA,GAAWD,CAAAA,CAAS,CAATA,CADXA;AAAAA,cAEAE,CAAAA,GAAYL,CAAAA,CAAMxF,MAFlB2F;AAAAA,cAGAG,CAAAA,GAAcN,CAAAA,CAAMK,CAAAA,GAAY,CAAlBL,CAHdG;AAMD3I,UAAAA,CAAAA,CAAE+I,OAAF/I,CAAU8I,CAAV9I,EAAuB2I,CAAvB3I,MACCwI,CAAAA,CAAMvE,IAANuE,CAAWI,CAAXJ,GACAK,CAAAA,EAFD7I,GAMA8I,CAAAA,IAAeF,CAAfE,KACCF,CAAAA,GAAWD,CAAAA,CAAS,CAATA,CADZG,CANA9I;;AAWC,eAAA,IAAI8C,CAAAA,GAAE,CAAN,EAASA,CAAAA,GAAI+F,CAAAA,GAAY,CAAzB,EAA4B/F,CAAAA,EAA5B;AAEGwF,gBADHU,IAAAA,GAAOR,CAAAA,CAAM1F,CAAN0F,CAAPQ,EACGV,WAAAA,CAAYW,QAAZX,CAAqBU,IAArBV,EAA2BM,CAA3BN,CAAAA,EACQU,OAAAA,IAAAA;AAHX;AAGWA,SA3BL;AAgCdC,QAAAA,QAAAA,EAAU,kBAASC,CAAT,EAAyBC,CAAzB,EAAyBA;AAC3BC,cAAAA,CAAAA,GAAOpJ,CAAAA,CAAE,+CAA+CmJ,CAA/C,GAA+D,wIAAjEnJ,CAAPoJ;AACJpJ,UAAAA,CAAAA,CAAE,MAAFA,CAAAA,CAAUqJ,OAAVrJ,CAAkBoJ,CAAlBpJ;AAEIsJ,cAAAA,CAAAA,GAAiBF,CAAAA,CAAKG,KAALH,EAAjBE;AACJF,UAAAA,CAAAA,CAAKrG,GAALqG,CAAS,aAATA,EAAwBF,CAAAA,GAAiB,GAAjBA,GAAuBC,CAA/CC;AACII,cAAAA,CAAAA,GAAkBJ,CAAAA,CAAKG,KAALH,EAAlBI;AAIIA,iBAHRJ,CAAAA,CAAK7F,MAAL6F,IAGQI,CAAAA,IAAmBF,CAAnBE;AAAmBF;AA1CjB,OAAdhB,EA8CG,UAASmB,CAAT,EAASA;AACLnB,eAAAA,WAAAA,CAAYV,IAAZU,CAAiBmB,CAAjBnB,CAAAA;AAAiBmB,OAhD5BpB,CAAAA;AAAAA,UACIC,WADJD;AAwDJ1H,MAAAA,MAAAA,CAAO+I,OAAP/I,GAAiB,IAAK,YAAA;AAIdgJ,YAAAA,CAAAA,GAAO,IAAPA;AAAAA,YACEC,CAAAA,GAAMC,SAAAA,CAAUC,QADlBH;AAAAA,YAEEI,CAAAA,GAAgB,CAClB,qBAAqBC,QAAAA,CAASC,eAATD,CAAyB3G,KAA9C,IAAuD,QADrC,EAEhBwG,SAAAA,CAAUK,SAAVL,CAAoBM,OAApBN,CAA4B,MAA5BA,IAA4B,CAAW,CAAvCA,IAA4C,IAF5B,EAGhB,kBAAkBG,QAAAA,CAASC,eAATD,CAAyB3G,KAA3C,IAAoD,KAHpC,EAIhB1C,MAAAA,CAAOyJ,KAAPzJ,IAAgB,GAJA,EAKpB0J,MALoB,CAKb,UAASC,CAAT,EAAaC,CAAb,EAAaA;AAAaD,iBAAAA,CAAAA,IAAMC,CAAAA,IAAM,EAAZD,CAAAA;AAAY,SALzB,CAFlBX;AAAAA,YAQEa,CAAAA,GAAW,CACbZ,CAAAA,CAAIxJ,KAAJwJ,CAAU,KAAVA,KAAoB,KADP,EAEXA,CAAAA,CAAIxJ,KAAJwJ,CAAU,KAAVA,KAAoB,KAFT,EAGXA,CAAAA,CAAIxJ,KAAJwJ,CAAU,OAAVA,KAAsB,OAHX,EAIfS,MAJe,CAIR,UAASC,CAAT,EAAaC,CAAb,EAAaA;AAAaD,iBAAAA,CAAAA,IAAMC,CAAAA,IAAM,EAAZD,CAAAA;AAAY,SAJ9B,CARbX;AAAAA,YAcAhC,CAAAA,GAAU;AAEV8C,UAAAA,MAAAA,EAAQ,gBAASrF,CAAT,EAAesF,CAAf,EAAyBC,CAAzB,EAAyBA;AAEzBC,gBAAAA,CAAAA,GAAaD,CAAAA,CAAWvK,KAAXuK,CAAiB,sCAAjBA,CAAbC;AACD,gBAAA,CAACA,CAAD,IAAeA,CAAAA,CAAW,CAAXA,CAAAA,KAAkBxF,CAAjC,EAAuC,OAAA,CAAO,CAAP;AAEtCyF,gBAUEC,CAVFD;AAAAA,gBAUYE,CAVZF;AAAAA,gBAUsBG,CAVtBH;AAAAA,gBAAAA,CAAAA,GAAe,WAATzF,CAAS,GACTsF,CAAAA,CAAS1C,QAAT0C,CAAkB,MAAlBA,CADS,GAETA,CAAAA,CAASrJ,IAATqJ,CAAc,aAAdA,CAFNG;AAAAA,gBAKEI,CAAAA,GAAcN,CAAAA,CAAWvK,KAAXuK,CAAiB,oCAAjBA,CALhBE;AAAAA,gBAQEK,CAAAA,GAAQlL,CAAAA,CAAE4C,IAAF5C,CAAO4K,CAAAA,CAAW,CAAXA,CAAAA,CAAczK,OAAdyK,CAAsB,SAAtBA,EAAiC,IAAjCA,EAAuCzK,OAAvCyK,CAA+C,YAA/CA,EAA6D,KAA7DA,CAAP5K,EAA4E6C,KAA5E7C,CAAkFiL,CAAAA,GAAc,IAAdA,GAAqB,GAAvGjL,CARV6K;AAAAA,gBAWEM,CAAAA,GAAe,EAXjBN;AAYD,mBAACK,CAAAA,IAEJlL,CAAAA,CAAE4B,IAAF5B,CAAOkL,CAAPlL,EAAc,UAASqE,CAAT,EAAgB+G,CAAhB,EAAgBA;AAAAA,eAC1BN,CAAAA,GAAWM,CAAAA,CAAKvI,KAALuI,CAAW,GAAXA,CADeA,EAKjB,CALiBA,IAKZN,CAAAA,CAAS,CAATA,CAAAA,CAAY3K,OAAZ2K,CAAoB,iBAApBA,EAAuC,IAAvCA,CALYM,EAQtBL,CAAAA,GADQ,WAAT3F,CAAS,GACG0F,CAAAA,CAAS,CAATA,CAAAA,CAAYjI,KAAZiI,CAAkB,GAAlBA,CADH,GAGGA,CAAAA,CAAS,CAATA,CAVWM,EAY1BJ,CAAAA,GAAW,WAAS3G,CAAT,EAASA;AACZgH,oBACAC,CADAD;AAAAA,oBACUE,CADVF;AAAAA,oBAAAA,CAAAA,GAAQrL,CAAAA,CAAE,IAAFA,CAAAA,CAAQsH,IAARtH,GAAeI,KAAfJ,CAAqB,IAAIwL,MAAJ,CAAWT,CAAAA,CAAS,CAATA,CAAX,CAArB/K,CAARqL;AAaGA,uBAXY,QAAhBN,CAAAA,CAAS,CAATA,CAAgB,GACfQ,CAAAA,GAAAA,CAASvL,CAAAA,CAAE,IAAFA,CAAAA,CAAQyL,IAARzL,GAAe0L,IAAf1L,MAAyB,EAAlCuL,EAAsCnL,KAAtCmL,CAA4C,IAAIC,MAAJ,CAAWT,CAAAA,CAAS,CAATA,CAAX,CAA5CQ,CADe,IAGfD,CAAAA,GAAmB,UAARlG,CAAQ,GACbpF,CAAAA,CAAE,IAAFA,CAAAA,CAAQyL,IAARzL,CAAa,iBAAbA,CADa,GAKbA,CAAAA,CAAE,IAAFA,CAAAA,CAAQ2L,MAAR3L,GAAiByL,IAAjBzL,CAAsB,iBAAtBA,CALNsL,EAMAC,CAAAA,GAAAA,CAAUvL,CAAAA,CAAE,IAAFA,CAAAA,CAAQyL,IAARzL,GAAegD,MAAzBuI,IAAmCD,CAAAA,CAAStI,MAT7B,GAWZqI,CAAAA,IAASE,CAATF;AAASE,eA1BMH,EA6B1BD,CAAAA,CAAalH,IAAbkH,CAAkB,CAACL,CAAAA,CAAS,CAATA,CAAD,EAAcD,CAAAA,CAAI1J,MAAJ0J,CAAWG,CAAXH,CAAd,CAAlBM,CA7B0BC;AA6BiBJ,aA7B/ChL,GAgCOmL,CAlCHD,IAkCGC,KAlCJ,CAAA;AAAA,WAnBG;AAyDVS,UAAAA,QAAAA,EAAU,kBAASxG,CAAT,EAAesF,CAAf,EAAyBmB,CAAzB,EAAyBA;AAC3BC,gBAAAA,CAAAA,GAAeD,CAAAA,CAAazL,KAAbyL,CAAmB,wCAAnBA,CAAfC;AACD,gBAAA,CAACA,CAAD,IAAiBA,CAAAA,CAAa,CAAbA,CAAAA,KAAoB1G,CAArC,EAA2C,OAAA,CAAO,CAAP;AAE1CyF,gBAKAkB,CALAlB;AAAAA,gBAAAA,CAAAA,GAAe,WAATzF,CAAS,GACTsF,CAAAA,CAAS1C,QAAT0C,CAAkB,MAAlBA,CADS,GAETA,CAAAA,CAASrJ,IAATqJ,CAAc,aAAdA,CAFNG;AAAAA,gBAGAI,CAAAA,GAAcY,CAAAA,CAAazL,KAAbyL,CAAmB,oCAAnBA,CAHdhB;AAAAA,gBAIAmB,CAAAA,GAAUhM,CAAAA,CAAE4C,IAAF5C,CAAO8L,CAAAA,CAAa,CAAbA,CAAAA,CAAgB3L,OAAhB2L,CAAwB,SAAxBA,EAAmC,IAAnCA,EAAyC3L,OAAzC2L,CAAiD,YAAjDA,EAA+D,KAA/DA,CAAP9L,EAA8E6C,KAA9E7C,CAAoFiL,CAAAA,GAAc,IAAdA,GAAqB,GAAzGjL,CAJV6K;AAAAA,gBAMAoB,CAAAA,GAAiB,EANjBpB;AAOD,mBAACmB,CAAAA,IAEJhM,CAAAA,CAAE4B,IAAF5B,CAAOgM,CAAPhM,EAAgB,UAASqE,CAAT,EAAgB6H,CAAhB,EAAgBA;AAC5BH,cAAAA,CAAAA,GAAaG,CAAAA,CAAOrJ,KAAPqJ,CAAa,GAAbA,CAAbH,EACGd,CAAAA,IAAqE,QAAtDc,CAAAA,CAAW,CAAXA,CAAAA,CAAcjL,SAAdiL,CAAwBA,CAAAA,CAAW,CAAXA,CAAAA,CAAc/I,MAAd+I,GAAuB,CAA/CA,CAAfd,KACCc,CAAAA,CAAW,CAAXA,CAAAA,IAAiB,GADlBd,CADHc,EAGAE,CAAAA,CAAehI,IAAfgI,CAAoB,CAACjM,CAAAA,CAAE4C,IAAF5C,CAAO+L,CAAAA,CAAW,CAAXA,CAAP/L,CAAD,EAAwB6K,CAAAA,CAAI1J,MAAJ0J,CAAW,gBAAgB7K,CAAAA,CAAE4C,IAAF5C,CAAO+L,CAAAA,CAAW,CAAXA,CAAP/L,CAAhB,GAAwC,GAAnD6K,CAAxB,CAApBoB,CAHAF;AAG+F,aAJnG/L,GAOOiM,CATHD,IASGC,KATJ,CAAA;AAAA,WApEG;AAiFVE,UAAAA,YAAAA,EAAc,sBAAS/G,CAAT,EAAesF,CAAf,EAAyBhI,CAAzB,EAAyBA;AAC/B0J,gBAAAA,CAAAA,GAAmB1J,CAAAA,CAAKtC,KAALsC,CAAW,6CAAXA,CAAnB0J;;AACD,gBAACA,CAAD,EAAA;AAEgB,wBAAThH,CAAS,KAEA,WAATA,CAAS,GACTsF,CAAAA,CAAS1C,QAAT0C,CAAkB,MAAlBA,CADS,GAETA,CAAAA,CAASrJ,IAATqJ,CAAc,aAAdA,CAJS,GAKDhI,CAAAA,CAAKtC,KAALsC,CAAW,oCAAXA,CALC;AAAfmI,kBAOAwB,CAPAxB;AAAAA,kBAMAyB,CAAAA,GAAQF,CAAAA,CAAiB,CAAjBA,CAAAA,CAAoBjM,OAApBiM,CAA4B,KAA5BA,EAAmC,EAAnCA,EAAuChM,KAAvCgM,CAA6C,4CAA7CA,CANRvB;AAAAA,kBAOU0B,CAAAA,GAAe,EAPzB1B;AAAAA,kBAO6B2B,CAAAA,GAAa,EAP1C3B;AAQD,kBAACyB,CAAD,EAkBIE,OAhBP9B,CAAAA,CAAS9I,IAAT8I,CAAc,UAAS5H,CAAT,EAAY2J,CAAZ,EAAYA;AAClBC,oBAAAA,CAAAA,GAAYrE,OAAAA,CAAQoE,CAARpE,CAAAA,CAAYlI,OAAZkI,CAAoB,iBAApBA,EAAuC,IAAvCA,CAAZqE;AACAH,gBAAAA,CAAAA,CAAaG,CAAbH,CAAAA,GAGAA,CAAAA,CAAaG,CAAbH,CAAAA,CAAwBtI,IAAxBsI,CAA6BE,CAA7BF,CAHAA,GACAA,CAAAA,CAAaG,CAAbH,CAAAA,GAA0B,CAACE,CAAD,CAD1BF;AAC2BE,eAHnC/B,GAQA1K,CAAAA,CAAE4B,IAAF5B,CAAOsM,CAAPtM,EAAc,UAASqE,CAAT,EAAgB2E,CAAhB,EAAgBA;AAEvB,oBAAA,EADHqD,CAAAA,GAAWrD,CAAAA,CAAK5I,KAAL4I,CAAW,2BAAXA,CACR,CAAA,EAAW,OAAA,CAAO,CAAP;AAAO,iBACrBqD,CAAAA,GAAWA,CAAAA,CAAS7F,MAAT6F,CAAgB,CAAhBA,CADU,EAET,CAFS,KAEHE,CAFG,IAGjBC,CAAAA,CAAWvI,IAAXuI,CAAgB,CAACxM,CAAAA,CAAE4C,IAAF5C,CAAOqM,CAAAA,CAAS,CAATA,CAAPrM,CAAD,EAAsBA,CAAAA,CAAEuM,CAAAA,CAAaF,CAAAA,CAAS,CAATA,CAAbE,CAAFvM,CAAtB,CAAhBwM,CAHiB;AAG6C,eALtExM,CARA0K,EAgBO8B,CAAAA;AAAAA;AAAAA,WA/GD;AAmHVG,UAAAA,eAAAA,EAAiB,yBAASvH,CAAT,EAAesF,CAAf,EAAyBkC,CAAzB,EAAoCC,CAApC,EAAoCA;AAC7CC,gBAAAA,CAAAA,GAAcnF,CAAAA,CAAQwE,YAARxE,CAAqBvC,CAArBuC,EAA2B+C,CAA3B/C,EAAqCkF,CAArClF,CAAdmF;;AACAA,YAAAA,CAAAA,IAAgBA,CAAAA,CAAY9J,MAA5B8J,KACAA,CAAAA,GAAc,CAAC,CAACD,CAAD,EAASnC,CAAT,CAAD,CADdoC,GAGJ9M,CAAAA,CAAE4B,IAAF5B,CAAO8M,CAAP9M,EAAoB,UAASgE,CAAT,EAAY+I,CAAZ,EAAYA;AACxBC,kBAcIC,CAdJD;AAAAA,kBAciBE,CAdjBF;AAAAA,kBAcuBG,CAdvBH;AAAAA,kBAAAA,CAAAA,GAAOD,CAAAA,CAAG,CAAHA,CAAPC;AAAAA,kBAAcnC,CAAAA,GAAMkC,CAAAA,CAAG,CAAHA,CAApBC;AAAAA,kBACAI,CAAAA,GAASzF,CAAAA,CAAQ8C,MAAR9C,CAAevC,CAAfuC,EAAqBkD,CAArBlD,EAA0BqF,CAA1BrF,KACNA,CAAAA,CAAQiE,QAARjE,CAAiBvC,CAAjBuC,EAAuBkD,CAAvBlD,EAA4BqF,CAA5BrF,CAFHqF;;AAGDI,cAAAA,CAAAA,GACCpN,CAAAA,CAAE4B,IAAF5B,CAAOoN,CAAPpN,EAAe,UAASqE,CAAT,EAAgBgJ,CAAhB,EAAgBA;AACxB,oBAAqB,YAAA,OAAdT,CAAP,EAA+B;AAC1B9F,sBAAAA,CAAAA,GAAQ,EAARA;AACJ9G,kBAAAA,CAAAA,CAAE4B,IAAF5B,CAAO4M,CAAP5M,EAAkB,UAASgE,CAAT,EAAYsJ,CAAZ,EAAYA;AAAQxG,oBAAAA,CAAAA,CAAMwG,CAANxG,CAAAA,GAAcuG,CAAAA,CAAM,CAANA,CAAdvG;AAAoB,mBAA1D9G,GACAqN,CAAAA,CAAM,CAANA,CAAAA,CAAStK,GAATsK,CAAavG,CAAbuG,CADArN;AACa8G,iBAHd,MAKCuG,CAAAA,CAAM,CAANA,CAAAA,CAAStK,GAATsK,CAAaT,CAAbS,EAAwBA,CAAAA,CAAM,CAANA,CAAxBA;AAA8B,eANtCrN,CADDoN,IAcKH,CAAAA,GAAAA,CADDE,CAAAA,GAAkBH,CAAAA,CAAK5M,KAAL4M,CAAW,4CAAXA,CACjBC,IAAcjN,CAAAA,CAAEuN,GAAFvN,CAAMmN,CAANnN,EAAuB,UAASwN,CAAT,EAAc1K,CAAd,EAAcA;AACxC0K,uBAAAA,CAAAA,CAAIrN,OAAJqN,CAAY,gCAAZA,EAA8C,IAA9CA,CAAAA;AAA8C,eAD3CxN,CAAdiN,GAIcD,CAAAA,CAAK7M,OAAL6M,CAAa,UAAbA,EAAyB,GAAzBA,EAA8BnK,KAA9BmK,CAAoC,GAApCA,CAJdC,EAOJpC,CAAAA,CAAIjJ,IAAJiJ,CAAS,UAAS/H,CAAT,EAAY2J,CAAZ,EAAYA;AACjBS,gBAAAA,CAAAA,GAAgB,UAAT9H,CAAS,GACVpF,CAAAA,CAAEyM,CAAFzM,CADU,GAED,WAAToF,CAAS,GACTpF,CAAAA,CAAEyM,CAAFzM,CAAAA,CAAMgI,QAANhI,CAAe,MAAfA,CADS,GAETA,CAAAA,CAAEyM,CAAFzM,CAAAA,CAAMqB,IAANrB,CAAW,aAAXA,CAJNkN,EAKAlN,CAAAA,CAAE4B,IAAF5B,CAAOiN,CAAPjN,EAAoB,UAASqE,CAAT,EAAgBoJ,CAAhB,EAAgBA;AAC7B,sBAAqB,YAAA,OAAdb,CAAP,EAA+B;AAC1B9F,wBAAAA,CAAAA,GAAQ,EAARA;AACJ9G,oBAAAA,CAAAA,CAAE4B,IAAF5B,CAAO4M,CAAP5M,EAAkB,UAASgE,CAAT,EAAYsJ,CAAZ,EAAYA;AAAQxG,sBAAAA,CAAAA,CAAMwG,CAANxG,CAAAA,GAAc2G,CAAd3G;AAAc2G,qBAApDzN,GACAkN,CAAAA,CAAKQ,EAALR,CAAQ7I,CAAR6I,EAAenK,GAAfmK,CAAmBpG,CAAnBoG,CADAlN;AACmB8G,mBAHpB,MAKCoG,CAAAA,CAAKQ,EAALR,CAAQ7I,CAAR6I,EAAenK,GAAfmK,CAAmBN,CAAnBM,EAA8BO,CAA9BP;AAA8BO,iBANtCzN,CALAkN;AAWsCO,eAZ1C5C,CArBDuC,CAAAA;AAiC2CK,aArClDzN,CAHI8M;AAwC8CW,WA7J5C;AAqKVE,UAAAA,IAAAA,EAAM,cAASvI,CAAT,EAAesF,CAAf,EAAyBkD,CAAzB,EAAyBA;AAC3BjG,YAAAA,CAAAA,CAAQgF,eAARhF,CAAwBvC,CAAxBuC,EAA8B+C,CAA9B/C,EAAwC,cAAxCA,EAAwDiG,CAAxDjG;AAAwDiG,WAtKlD;AAyKVC,UAAAA,IAAAA,EAAM,cAASzI,CAAT,EAAesF,CAAf,EAAyBoD,CAAzB,EAAyBA;AAC3BnG,YAAAA,CAAAA,CAAQgF,eAARhF,CAAwBvC,CAAxBuC,EAA8B+C,CAA9B/C,EAAwC,WAAxCA,EAAqDmG,CAArDnG;AAAqDmG,WA1K/C;AA6KVC,UAAAA,MAAAA,EAAQ,gBAAS3I,CAAT,EAAesF,CAAf,EAAyBsD,CAAzB,EAAyBA;AAC7BrG,YAAAA,CAAAA,CAAQgF,eAARhF,CAAwBvC,CAAxBuC,EAA8B+C,CAA9B/C,EAAwC,aAAxCA,EAAuDqG,CAAvDrG;AAAuDqG,WA9KjD;AAiLVC,UAAAA,KAAAA,EAAO,eAAS7I,CAAT,EAAesF,CAAf,EAAyBwD,CAAzB,EAAyBA;AAC5BvG,YAAAA,CAAAA,CAAQgF,eAARhF,CAAwBvC,CAAxBuC,EAA8B+C,CAA9B/C,EAAwC,OAAxCA,EAAiDuG,CAAjDvG;AAAiDuG,WAlL3C;AAqLVC,UAAAA,eAAAA,EAAiB,yBAAS/I,CAAT,EAAesF,CAAf,EAAyBwD,CAAzB,EAAyBA;AACtCvG,YAAAA,CAAAA,CAAQgF,eAARhF,CAAwBvC,CAAxBuC,EAA8B+C,CAA9B/C,EAAwC,kBAAxCA,EAA4DuG,CAA5DvG;AAA4DuG,WAtLtD;AAyLVE,UAAAA,SAAAA,EAAW,mBAAShJ,CAAT,EAAesF,CAAf,EAAyB2D,CAAzB,EAAyBA;AAQhC1G,YAAAA,CAAAA,CAAQgF,eAARhF,CAAwBvC,CAAxBuC,EAA8B+C,CAA9B/C,EAPiB,CACb,mBADa,EAEX,gBAFW,EAGX,eAHW,EAIX,cAJW,EAKX,WALW,CAOjBA,EAAoD0G,CAApD1G;AAAoD0G;AAjM9C,SAdV1E;AAsNC2E,aAAAA,MAAAA,GAAS,UAASvL,CAAT,EAAcwL,CAAd,EAAcA;AAGpB,eAAA,IAAItN,CAAJ,IAFA0I,CAAAA,CAAK6E,UAAL7E,KAAiBA,CAAAA,CAAK6E,UAAL7E,GAAkB5G,CAAnC4G,GAEgB5G,CAAhB;AACI,iBAAA,IAAI0L,CAAJ,IAAgB1L,CAAAA,CAAI9B,CAAJ8B,CAAhB,EAA+B;AAC3B3C,kBAAAA,CAAAA;AAAAA,kBACAsK,CADAtK;AAAAA,kBAEAqN,CAAAA,GAAQ1K,CAAAA,CAAI9B,CAAJ8B,CAAAA,CAAc0L,CAAd1L,CAFR3C;;AAKDA,kBAAAA,CAAAA,GAAQqO,CAAAA,CAASrO,KAATqO,CAAe,IAAIjD,MAAJ,CAAW,QAAQzB,CAAR,GAAwB,IAAxB,GAA+BS,CAA/B,GAAyC,qEAApD,EAA2H,GAA3H,CAAfiE,CAARrO,EAAyJ;AACpJsO,oBAAAA,CAAAA,GAActO,CAAAA,CAAM,CAANA,CAAAA,CAAS2G,WAAT3G,EAAdsO;AAAAA,oBACAC,CAAAA,GAASvO,CAAAA,CAAM,CAANA,CAAAA,CAAS2G,WAAT3G,EADTsO;AAGJhE,gBAAAA,CAAAA,GAAW1K,CAAAA,CAAEiB,CAAFjB,CAAX0K,EACG6D,CAAAA,KACC7D,CAAAA,GAAWA,CAAAA,CAASkE,GAATlE,CAAa,YAAbA,CADZ6D,CADH7D,EAIAA,CAAAA,CACKkE,GADLlE,CACS,YADTA,EAEKmE,QAFLnE,CAEc,WAFdA,EAE2B3H,GAF3B2H,CAE+B,YAF/BA,EAE6C,SAF7CA,EAGKxC,SAHLwC,CAGe,OAHfA,EAGwB1C,QAHxB0C,CAGiC,MAHjCA,EAGyC3H,GAHzC2H,CAG6C,SAH7CA,EAGwD,cAHxDA,EAIKxC,SAJLwC,GAIiB1C,QAJjB0C,CAI0B,MAJ1BA,EAIkC3H,GAJlC2H,CAIsC,SAJtCA,EAIiD,cAJjDA,CAJAA,EAUG/C,CAAAA,CAAQgH,CAARhH,CAAAA,IACCA,CAAAA,CAAQgH,CAARhH,CAAAA,CAAgB1B,IAAhB0B,CAAqB,IAArBA,EAA2B+G,CAA3B/G,EAAwC+C,CAAxC/C,EAAkD8F,CAAlD9F,CAXJ+C;AAWsD+C,eAfvDrN,MAkBI,IAAA,CAAIA,CAAAA,GAAQqO,CAAAA,CAASrO,KAATqO,CAAe,qBAAfA,CAAZ,KAAsDhB,CAAAA,CAAMrN,KAANqN,CAAY,UAAZA,CAAtD,EAA+E;AAC9EkB,gBAAAA,CAAAA,GAASvO,CAAAA,CAAM,CAANA,CAAAA,CAAS2G,WAAT3G,EAATuO;AACJjE,gBAAAA,CAAAA,GAAW1K,CAAAA,CAAEiB,CAAFjB,CAAX0K,EACG6D,CAAAA,KACC7D,CAAAA,GAAWA,CAAAA,CAASkE,GAATlE,CAAa,YAAbA,CADZ6D,CADH7D,EAIAA,CAAAA,CACKkE,GADLlE,CACS,YADTA,EAEKmE,QAFLnE,CAEc,WAFdA,EAE2B3H,GAF3B2H,CAE+B,YAF/BA,EAE6C,SAF7CA,CAJAA,EAQG/C,CAAAA,CAAQgH,CAARhH,CAAAA,IACCA,CAAAA,CAAQgH,CAARhH,CAAAA,CAAgB1B,IAAhB0B,CAAqB,IAArBA,EAA2B,KAA3BA,EAAkC+C,CAAlC/C,EAA4C8F,CAA5C9F,CATJ+C;AASgD+C;AAAAA;AApCxD;AAoCwDA,SAvC3Da,EAkDAQ,KAAAA,IAAAA,GAAO,YAAA;AAGR9O,UAAAA,CAAAA,CAAEgK,QAAFhK,CAAAA,CAAY+O,IAAZ/O,CAAiB,iBAAjBA,EAAoC,UAASgP,CAAT,EAASA;AACtCA,YAAAA,CAAAA,CAAIC,MAAJD,IAAYrF,CAAAA,CAAKuF,OAALvF,CAAKuF,CAAQ,CAAbvF,CAAZqF;AAAyB,WADhChP;AACgC,SAtD/BsO,EA6DAY,KAAAA,OAAAA,GAAU,UAASC,CAAT,EAASA;AACjBxF,UAAAA,CAAAA,CAAK6E,UAAL7E,IACCA,CAAAA,CAAK2E,MAAL3E,CAAYA,CAAAA,CAAK6E,UAAjB7E,EAA6BwF,CAA7BxF,CADDA;AAC8BwF,SA/DhCb,EAmELtO,CAAAA,CAAE,YAAA;AACEA,UAAAA,CAAAA,CAAEgK,QAAFhK,CAAAA,CAAYuB,QAAZvB,CAAqB2J,CAAAA,CAAK2E,MAA1BtO,EAA0BsO,CAAQ,CAAlCtO;AAAkC,SADtCA,CAnEKsO;AAoEiC,OA9RzB,EAAjB3N;AAhXJ,KAAA,CAipBGyO,MAjpBH,CAAA","file":"kerning.5df1c74b.ec2e14c8.map","sourceRoot":"","sourcesContent":["/**\r\n * Created by hlbinamyslenia on 12/6/16.\r\n */\r\n/*global jQuery */\r\n/*!\r\n * Kerning.js\r\n * Version: 0.2.1\r\n * Copyright 2011 Joshua Gross\r\n * MIT license\r\n *\r\n * Usage:\r\n *  Include this file anywhere in your HTML\r\n *    <script src=\"kerning.js\"></script>\r\n *\r\n *  Then, add any of the attributes following to your CSS, under any\r\n *  selectors you want modified:\r\n *    -letter-kern, -letter-size, -letter-weight, -letter-color, -letter-transform\r\n *    -word-kern, -word-size, -word-weight, -word-color, -word-transform\r\n *\r\n *  To use pairings (e.g., modify 'a' if 'ab' is paired):\r\n *    -letter-pairs('xy': [value], …)\r\n *    -word-pairs('cat mouse': [value], …)\r\n *\r\n *  To use multiple transforms, you need to use transform \"groups\":\r\n *    -transform-group([transform] [transform] …)\r\n *\r\n *  Sometimes you need to want to use a different size or weight, depending on what\r\n *  font has loaded:\r\n *    font-size: [default size];\r\n *    font-size: if-font('font name': [size], 'font name': [size], …);\r\n *  (The first line is a fallback should Kerning.js not load. This is recommended.)\r\n *\r\n *  That's it! Attributes will be applied automagically.\r\n *\r\n * Examples:\r\n *  Alter first 3 letters:\r\n *    -letter-size: 100px 20px 30px;\r\n *\r\n *  Modify letter pairs:\r\n *    -letter-kern: -letter-pairs('ab': 1px,\r\n *                                'bc': 300px,\r\n *                                's ': 100px);\r\n *\r\n *  Transform the first two letters:\r\n *    -letter-transform: -transform-group(rotate3d(0,0,1,10deg) translate3d(0,10px,0))\r\n *                       -transform-group(translate3d(0,-10px,0) rotate3d(0,0,1,-10deg));\r\n *\r\n *  Modify word pairs:\r\n *    -word-size: -word-pairs('this is': 10em);\r\n *\r\n *  Modify the first 3 words:\r\n *    -word-size: 10em 0.1em 0.2em;\r\n *\r\n *  Using repeat rules:\r\n *    -letter-color: -letter-repeat(even: #f0f0f0, odd: #cccccc);\r\n *    -letter-color: -letter-repeat(2n+1: #f0f0f0);\r\n *\r\n *  Using conditionals:\r\n *    -letter-kern: if-font('Helvetica Neue': 0 1px 1px, 'Helvetica': 0 -1px 0);\r\n *\r\n *  Using conditionals on existing properties for weight or size:\r\n *    font-size: 9.5em;\r\n *    font-size: if-font('Helvetica Neue': 10em, 'Helvetica': 9em);\r\n */\r\n(function($){\r\n    /*!\r\n     * jQuery based CSS parser\r\n     * documentation: http://youngisrael-stl.org/wordpress/2009/01/16/jquery-css-parser/\r\n     * Version: 1.3\r\n     * Copyright (c) 2011 Daniel Wachsstock\r\n     * MIT license\r\n     */\r\n    (function() {\r\n        // utility function to determine whether or not a URL has the same origin as the current location\r\n        // See http://jsfiddle.net/35Jku/35/\r\n        var hasSameOrigin = function(url) {\r\n            return url === url.replace(/^([^\\/]*)\\/\\/([^@]*@)?([^\\/:]+)(:\\d+)?.*/, function(match, protocol, user, hostname, port, offset, string) {\r\n                    protocol = (protocol === \"\") ? window.location.protocol : protocol;\r\n                    port = (port === undefined) ? \"\" : port.substring(1);\r\n                    if (protocol !== window.location.protocol)\r\n                        return \"\"; // \"protocol mismatch: \" + protocol + \" vs. \" + window.location.protocol\r\n                    if (hostname !== window.location.hostname)\r\n                        return \"\"; // \"hostname mismatch: \" + hostname + \" vs. \" + window.location.hostname\r\n                    if (port !== window.location.port)\r\n                        return \"\"; // \"port mismatch: \" + port + \" vs. \" + window.location.port\r\n                    return url;\r\n                });\r\n        }\r\n        // utility function, since we want to allow $('style') and $(document), so we need to look for elements in the jQuery object ($.fn.filter) and elements that are children of the jQuery object ($.fn.find)\r\n        $.fn.findandfilter = function(selector) {\r\n            var ret = this.filter(selector).add(this.find(selector));\r\n            ret.prevObject = ret.prevObject.prevObject; // maintain the filter/end chain correctly (the filter and the find both push onto the chain).\r\n            return ret;\r\n        };\r\n\r\n        $.fn.parsecss = function(callback, parseAttributes) {\r\n            var parse = function(str) { $.parsecss(str, callback) }; // bind the callback\r\n            this.findandfilter('style')\r\n                .each(function(){\r\n                    parse(this.innerHTML);\r\n                })\r\n                .end()\r\n                .findandfilter('link[type=\"text/css\"],link[rel=\"stylesheet\"]')\r\n                .each(function(){\r\n                    // only get the stylesheet if it's not disabled, it won't trigger cross-site security (doesn't start with anything like http:) and it uses the appropriate media)\r\n                    if(!this.disabled && hasSameOrigin(this.href) && $.parsecss.mediumApplies(this.media))\r\n                        $.get(this.href, parse);\r\n                })\r\n                .end();\r\n\r\n            if(parseAttributes) {\r\n                $.get(location.pathname+location.search, 'text', function(HTMLtext) {\r\n                    styleAttributes(HTMLtext, callback);\r\n                });\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        $.parsecss = function(str, callback) {\r\n            var ret = {};\r\n            str = munge(str).replace(/@(([^;`]|`[^b]|`b[^%])*(`b%)?);?/g, function(s, rule) {\r\n                // @rules end with ; or a block, with the semicolon not being part of the rule but the closing brace (represented by `b%) is\r\n                processAtRule($.trim(rule), callback);\r\n                return '';\r\n            });\r\n\r\n            $.each(str.split('`b%'), function(i, css) { // split on the end of a block\r\n                css = css.split('%b`'); // css[0] is the selector; css[1] is the index in munged for the cssText\r\n                if (css.length < 2) return; // invalid css\r\n                css[0] = restore(css[0]);\r\n                ret[css[0]] = $.extend(ret[css[0]] || {}, parsedeclarations(css[1]));\r\n            });\r\n            callback(ret);\r\n        };\r\n        // explanation of the above: munge(str) strips comments and encodes strings and brace-delimited blocks, so that\r\n        // %b` corresponds to { and `b% corresponds to }\r\n        // munge(str) replaces blocks with %b`1`b% (for example)\r\n        //\r\n        // str.split('`b%') splits the text by '}' (which ends every CSS statement)\r\n        // Each so the each(munge(str... function(i,css)\r\n        // is called with css being empty (the string after the last delimiter), an @rule, or a css statement of the form\r\n        // selector %b`n where n is a number (the block was turned into %b`n`b% by munge). Splitting on %b` gives the selector and the\r\n        // number corresponding to the declaration block. parsedeclarations will do restore('%b`'+n+'`b%') to get it back.\r\n\r\n        // if anyone ever implements http://www.w3.org/TR/cssom-view/#the-media-interface, we're ready\r\n        $.parsecss.mediumApplies = (window.media && window.media.query) || function(str) {\r\n                if(!str) return true; // if no descriptor, everything applies\r\n                if(str in media) return media[str];\r\n                var style = $('<style media=\"'+str+'\">body {position: relative; z-index: 1;}</style>').appendTo('head');\r\n                return media[str] = [$('body').css('z-index')==1, style.remove()][0]; // the [x,y][0] is a silly hack to evaluate two expressions and return the first\r\n            };\r\n\r\n        $.parsecss.isValidSelector = function(str) {\r\n            var s = $('<style>'+str+'{}</style>').appendTo('head')[0];\r\n            // s.styleSheet is IE; it accepts illegal selectors but converts them to UNKNOWN. Standards-based (s.shee.cssRules) just reject the rule\r\n            return [s.styleSheet ? !/UNKNOWN/i.test(s.styleSheet.cssText) : !!s.sheet.cssRules.length, $(s).remove()][0]; // the [x,y][0] is a silly hack to evaluate two expressions and return the first\r\n        };\r\n\r\n        $.parsecss.parseArguments = function(str) {\r\n            if(!str) return [];\r\n            var ret = [], mungedArguments = munge(str, true).split(/\\s+/); // can't use $.map because it flattens arrays !\r\n            for (var i = 0; i < mungedArguments.length; ++i) {\r\n                var a = restore(mungedArguments[i]);\r\n                try {\r\n                    ret.push(eval('('+a+')'));\r\n                } catch(err) {\r\n                    ret.push(a);\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        // expose the styleAttributes function\r\n        $.parsecss.styleAttributes = styleAttributes;\r\n\r\n        // caches\r\n        var media = {}; // media description strings\r\n        var munged = {}; // strings that were removed by the parser so they don't mess up searching for specific characters\r\n\r\n        // private functions\r\n\r\n        function parsedeclarations(index) { // take a string from the munged array and parse it into an object of property: value pairs\r\n            var str = munged[index].replace(/^{|}$/g, ''); // find the string and remove the surrounding braces\r\n            str = munge(str); // make sure any internal braces or strings are escaped\r\n            var parsed = {};\r\n            $.each(str.split(';'), function (i, decl) {\r\n                decl = decl.split(':');\r\n                if(decl.length < 2) return;\r\n                parsed[restore(decl[0])] = restore(decl.slice(1).join(':'));\r\n            });\r\n            return parsed;\r\n        }\r\n\r\n        // replace strings and brace-surrounded blocks with %s`number`s% and %b`number`b%. By successively taking out the innermost\r\n        // blocks, we ensure that we're matching braces. No way to do this with just regular expressions. Obviously, this assumes no one\r\n        // would use %s` in the real world.\r\n        // Turns out this is similar to the method that Dean Edwards used for his CSS parser in IE7.js (http://code.google.com/p/ie7-js/)\r\n        var REbraces = /{[^{}]*}/;\r\n        var REfull = /\\[[^\\[\\]]*\\]|{[^{}]*}|\\([^()]*\\)|function(\\s+\\w+)?(\\s*%b`\\d+`b%){2}/; // match pairs of parentheses, brackets, and braces and function definitions.\r\n        var REatcomment = /\\/\\*@((?:[^\\*]|\\*[^\\/])*)\\*\\//g; // comments of the form /*@ text */ have text parsed\r\n        // we have to combine the comments and the strings because comments can contain string delimiters and strings can contain comment delimiters\r\n        // var REcomment = /\\/\\*(?:[^\\*]|\\*[^\\/])*\\*\\/|<!--|-->/g; // other comments are stripped. (this is a simplification of real SGML comments (see http://htmlhelp.com/reference/wilbur/misc/comment.html) , but it's what real browsers use)\r\n        // var REstring = /\\\\.|\"(?:[^\\\\\\\"]|\\\\.|\\\\\\n)*\"|'(?:[^\\\\\\']|\\\\.|\\\\\\n)*'/g; //  match escaped characters and strings\r\n        var REcomment_string = /(?:\\/\\*(?:[^\\*]|\\*[^\\/])*\\*\\/)|(\\\\.|\"(?:[^\\\\\\\"]|\\\\.|\\\\\\n)*\"|'(?:[^\\\\\\']|\\\\.|\\\\\\n)*')/g;\r\n        var REmunged = /%\\w`(\\d+)`\\w%/;\r\n        var uid = 0; // unique id number\r\n        function munge(str, full) {\r\n            str = str\r\n                .replace(REatcomment,'$1') // strip /*@ comments but leave the text (to let invalid CSS through)\r\n                .replace(REcomment_string, function (s, string) { // strip strings and escaped characters, leaving munged markers, and strip comments\r\n                    if (!string) return '';\r\n                    var replacement = '%s`'+(++uid)+'`s%';\r\n                    munged[uid] = string.replace(/^\\\\/,''); // strip the backslash now\r\n                    return replacement;\r\n                });\r\n            // need a loop here rather than .replace since we need to replace nested braces\r\n            var RE = full ? REfull : REbraces;\r\n            while(match = RE.exec(str)) {\r\n                replacement = '%b`'+(++uid)+'`b%';\r\n                munged[uid] = match[0];\r\n                str = str.replace(RE, replacement);\r\n            }\r\n            return str;\r\n        }\r\n\r\n        function restore(str) {\r\n            if(str === undefined) return str;\r\n            while(match = REmunged.exec(str)) {\r\n                str = str.replace(REmunged, munged[match[1]]);\r\n            }\r\n            return $.trim(str);\r\n        }\r\n\r\n        function processAtRule (rule, callback) {\r\n            var split = rule.split(/\\s+/); // split on whitespace\r\n            var type = split.shift(); // first word\r\n            if(type=='media') {\r\n                var css = restore(split.pop()).slice(1, -1); // last word is the rule; need to strip the outermost braces\r\n                if($.parsecss.mediumApplies(split.join(' '))) {\r\n                    $.parsecss(css, callback);\r\n                }\r\n            } else if (type=='import') {\r\n                var url = restore(split.shift());\r\n                if($.parsecss.mediumApplies(split.join(' '))) {\r\n                    url = url.replace(/^url\\(|\\)$/gi, '').replace(/^[\"']|[\"']$/g, ''); // remove the url('...') wrapper\r\n                    $.get(url, function(str) { $.parsecss(str, callback) });\r\n                }\r\n            }\r\n        }\r\n\r\n        // override show and hide. $.data(el, 'showDefault') is a function that is to be used for show if no arguments are passed in (if there are arguments, they override the stored function)\r\n        // Many of the effects call the native show/hide() with no arguments, resulting in an infinite loop.\r\n        var _show = {show: $.fn.show, hide: $.fn.hide}; // save the originals\r\n        $.each(['show', 'hide'], function() {\r\n            var which = this, show = _show[which], plugin = which+'Default';\r\n            $.fn[which] = function(){\r\n                if(arguments.length > 0) return show.apply(this, arguments);\r\n                return this.each(function() {\r\n                    var fn = $.data(this, plugin), $this = $(this);\r\n                    if(fn) {\r\n                        $.removeData(this, plugin); // prevent the infinite loop\r\n                        fn.call($this);\r\n                        $this.queue(function() { $this.data(plugin, fn).dequeue() }); // put the function back at the end of the animation\r\n                    } else {\r\n                        show.call($this);\r\n                    }\r\n                });\r\n            };\r\n            $.fn[plugin] = function() {\r\n                var args = $.makeArray(arguments), name = args[0];\r\n                if($.fn[name]) { // a plugin\r\n                    args.shift();\r\n                    var fn = $.fn[name];\r\n                } else if($.effects && $.effects[name]) { // a jQuery UI effect. They require an options object as the second argument\r\n                    if(typeof args[1] != 'object') args.splice(1, 0, {});\r\n                    fn = _show[which];\r\n                } else { // regular show/hide\r\n                    fn = _show[which];\r\n                }\r\n                return this.data(plugin, function() { fn.apply(this,args) });\r\n            };\r\n        });\r\n\r\n        // experimental: find unrecognized style attributes in elements by reloading the code as text\r\n        var RESGMLcomment = /<!--([^-]|-[^-])*-->/g; // as above, a simplification of real comments. Don't put -- in your HTML comments!\r\n        var REnotATag = /(>)[^<]*/g;\r\n        var REtag = /<(\\w+)([^>]*)>/g;\r\n\r\n        function styleAttributes(HTMLtext, callback) {\r\n            var ret = '', style, tags = {}; //  keep track of tags so we can identify elements unambiguously\r\n            HTMLtext = HTMLtext.replace(RESGMLcomment, '').replace(REnotATag, '$1');\r\n            munge(HTMLtext).replace(REtag, function(s, tag, attrs) {\r\n                tag = tag.toLowerCase();\r\n                if(tags[tag]) ++tags[tag]; else tags[tag] = 1;\r\n                if(style = /\\bstyle\\s*=\\s*(%s`\\d+`s%)/i.exec(attrs)) { // style attributes must be of the form style = \"a: bc\" ; they must be in quotes. After munging, they are marked with numbers. Grab that number\r\n                    var id = /\\bid\\s*=\\s*(\\S+)/i.exec(attrs); // find the id if there is one.\r\n                    if (id) id = '#'+restore(id[1]).replace(/^['\"]|['\"]$/g,''); else id = tag + ':eq(' + (tags[tag]-1) + ')';\r\n                    ret += [id, '{', restore(style[1]).replace(/^['\"]|['\"]$/g,''),'}'].join('');\r\n                }\r\n            });\r\n            $.parsecss(ret, callback);\r\n        }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Lettering.JS 0.6.1\r\n     *\r\n     * Copyright 2010, Dave Rupert http://daverupert.com\r\n     * Released under the WTFPL license\r\n     * http://sam.zoy.org/wtfpl/\r\n     *\r\n     * Thanks to Paul Irish - http://paulirish.com - for the feedback.\r\n     *\r\n     * Date: Mon Sep 20 17:14:00 2010 -0600\r\n     */\r\n    (function() {\r\n        function injector(t, splitter, klass, after) {\r\n            var a = t.text().split(splitter), inject = '';\r\n            if (a.length) {\r\n                $(a).each(function(i, item) {\r\n                    inject += '<span class=\"'+klass+(i+1)+'\">'+item+'</span>'+after;\r\n                });\r\n                t.empty().append(inject);\r\n            }\r\n        }\r\n\r\n        var methods = {\r\n            init: function() {\r\n                return this.each(function() {\r\n                    injector($(this), '', 'char', '');\r\n                });\r\n            },\r\n\r\n            words: function() {\r\n                return this.each(function() {\r\n                    injector($(this), ' ', 'word', ' ');\r\n                });\r\n            },\r\n\r\n            lines: function() {\r\n                return this.each(function() {\r\n                    var r = \"eefec303079ad17405c889e092e105b0\";\r\n                    // Because it's hard to split a <br/> tag consistently across browsers,\r\n                    // (*ahem* IE *ahem*), we replaces all <br/> instances with an md5 hash\r\n                    // (of the word \"split\").  If you're trying to use this plugin on that\r\n                    // md5 hash string, it will fail because you're being ridiculous.\r\n                    injector($(this).children(\"br\").replaceWith(r).end(), r, 'line', '');\r\n                });\r\n            }\r\n        };\r\n\r\n        $.fn.lettering = function(method) {\r\n            // Method calling logic\r\n            if (method && methods[method]) {\r\n                return methods[method].apply(this, [].slice.call( arguments, 1 ));\r\n            } else if (method === 'letters' || !method) {\r\n                return methods.init.apply(this, [].slice.call( arguments, 0 )); // always pass an array\r\n            }\r\n            $.error('Method ' +  method + ' does not exist on jQuery.lettering');\r\n            return this;\r\n        };\r\n    })();\r\n\r\n\r\n    /*\r\n     *  Adapted from Font UnStack 0.1\r\n     *\r\n     *  Developed by Phil Oye\r\n     *  Copyright (c) 2009 Phil Oye, http://philoye.com/\r\n     *\r\n     *  Licensed under the MIT license:\r\n     *  http://www.opensource.org/licenses/mit-license.php\r\n     *\r\n     */\r\n    var unstack = (function() {\r\n        var fontunstack = {\r\n            init: function(elem){\r\n                var stack = $(elem).css('font-family').match(/[^'\",;\\s][^'\",;]*/g) || [];\r\n                return this.analyzeStack(stack, elem);\r\n            },\r\n\r\n            analyzeStack: function(stack, elems) {\r\n                var generics = [\"monospace\", \"sans-serif\", \"serif\", \"cursive\", \"fantasy\"];\r\n                var baseline = generics[0];\r\n                var num_fonts = stack.length;\r\n                var last_resort = stack[num_fonts - 1];\r\n\r\n                // If author hasn't included a generic (tsk, tsk), let's add one\r\n                if($.inArray(last_resort, generics)) {\r\n                    stack.push(baseline);\r\n                    num_fonts++;\r\n                }\r\n\r\n                // If the generic is the same as our baseline, let's use another.\r\n                if(last_resort == baseline) {\r\n                    baseline = generics[1];\r\n                };\r\n\r\n                // At this point we're sure there is a generic fallback font, so we'll only iterate though the non-generics.\r\n                for(var i=0; i < num_fonts - 1; i++) {\r\n                    font = stack[i];\r\n                    if(fontunstack.testFont(font, baseline)) {\r\n                        return font;\r\n                    }\r\n                }\r\n            },\r\n\r\n            testFont: function(requested_font, baseline_font) {\r\n                var span = $('<span id=\"font_tester\" style=\"font-family:' + baseline_font + '; font-size:144px;position:absolute;left:-10000px;top:-10000px;visibility:hidden;\">mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmml</span>');\r\n                $(\"body\").prepend(span);\r\n\r\n                var baseline_width = span.width();\r\n                span.css(\"font-family\", requested_font + \",\" + baseline_font );\r\n                var requested_width = span.width();\r\n                span.remove();\r\n\r\n                // If the dimensions change, the font is installed\r\n                return (requested_width != baseline_width);\r\n            }\r\n        };\r\n\r\n        return function(element) {\r\n            return fontunstack.init(element);\r\n        };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Kerning.js\r\n     */\r\n    window.Kerning = new (function() {\r\n        /* Test for browsers & OSes. Ugly, but type rendering differs between\r\n         * browsers and operating systems. We need CSS flags to allow for that.\r\n         */\r\n        var self = this\r\n            , nav = navigator.platform\r\n            , browserPrefix = [\r\n            'webkitTransform' in document.documentElement.style && 'webkit'\r\n            , navigator.userAgent.indexOf(\"MSIE\") > -1 && 'ms'\r\n            , \"MozTransform\" in document.documentElement.style && 'moz'\r\n            , window.opera && 'o'\r\n        ].reduce(function(pv, cv) { return pv + (cv || ''); })\r\n            , osPrefix = [\r\n            nav.match(/Mac/) && 'mac'\r\n            , nav.match(/Win/) && 'win'\r\n            , nav.match(/Linux/) && 'linux'\r\n        ].reduce(function(pv, cv) { return pv + (cv || ''); });\r\n\r\n        var methods = {\r\n            // Match -[letter|word]-pairs(…) values\r\n            _pairs: function(type, elements, pairString) {\r\n                // checks for the existence of the letter pair property, i.e.: -letter-pairs(…)\r\n                var usingPairs = pairString.match(/^-(letter|word)-pairs\\(([\\s\\S]+)\\)$/i);\r\n                if(!usingPairs || usingPairs[1] !== type) return false;\r\n\r\n                var els = type === 'word'\r\n                        ? elements.children('span') // for -word-pairs\r\n                        : elements.find('span > span') // for -letter-pairs\r\n\r\n                    // we parse the string slightly differently if a transform is used\r\n                    , isTransform = pairString.match(/translate|rotate|skew|perspective/i)\r\n\r\n                    // matches and splits the pairing rules\r\n                    , pairs = $.trim(usingPairs[2].replace(/,\\s+?'/g, \",'\").replace(/:\\s+?(\\d)/g, ':$1')).split(isTransform ? '),' : ',')\r\n\r\n                    , pairInfo, pairKeys, pairDown\r\n                    , pairElements = [];\r\n                if(!pairs) return;\r\n\r\n                $.each(pairs, function(index, pair) {\r\n                    pairInfo = pair.split(':');\r\n                    // match the content inside the pair (stripping the leading and tailing quotes)\r\n                    // pairs may not be in quotes, or may have quotes inside quotes (i.e., 'a\"'), so we\r\n                    // prefer to do this with a regex.\r\n                    pairInfo[0] = pairInfo[0].replace(/^['\"](.+)['\"]$/g, '$1');\r\n\r\n                    if(type === 'word')\r\n                        pairKeys = pairInfo[0].split(' ');\r\n                    else\r\n                        pairKeys = pairInfo[0];\r\n\r\n                    pairDown = function(index) {\r\n                        var char1 = $(this).text().match(new RegExp(pairKeys[0])),\r\n                            nextWord, char2;\r\n                        if(pairKeys[1] !== ' ') {\r\n                            char2 = ($(this).next().html() || '').match(new RegExp(pairKeys[1]));\r\n                        } else {\r\n                            nextWord = type == 'word'\r\n                                ? $(this).next('[class^=\"word\"]')\r\n                                // if one of the pairKeys is just a space and we're doing letter pairs,\r\n                                // we, instead, need to check for the existence of the next word,\r\n                                // since spaces aren't wrapped\r\n                                : $(this).parent().next('[class^=\"word\"]');\r\n                            char2 = (!$(this).next().length && nextWord.length);\r\n                        }\r\n                        return char1 && char2;\r\n                    };\r\n\r\n                    pairElements.push([pairInfo[1], els.filter(pairDown)]);\r\n                });\r\n\r\n                return pairElements;\r\n            },\r\n\r\n            // Match -[letter|word]-repeats(…) values\r\n            _repeats: function(type, elements, repeatString) {\r\n                var usingRepeats = repeatString.match(/^-(letter|word)-repeats\\(([\\s\\S]+)\\)$/i);\r\n                if(!usingRepeats || usingRepeats[1] !== type) return false;\r\n\r\n                var els = type === 'word'\r\n                        ? elements.children('span')\r\n                        : elements.find('span > span'),\r\n                    isTransform = repeatString.match(/translate|rotate|skew|perspective/i),\r\n                    repeats = $.trim(usingRepeats[2].replace(/,\\s+?'/g, \",'\").replace(/:\\s+?(\\d)/g, ':$1')).split(isTransform ? '),' : ','),\r\n                    repeatInfo, repeatKeys, repeatDown,\r\n                    repeatElements = [];\r\n                if(!repeats) return;\r\n\r\n                $.each(repeats, function(index, repeat) {\r\n                    repeatInfo = repeat.split(':');\r\n                    if(isTransform && repeatInfo[1].substring(repeatInfo[1].length - 1) !== ')')\r\n                        repeatInfo[1] += ')';\r\n                    repeatElements.push([$.trim(repeatInfo[1]), els.filter(':nth-child(' + $.trim(repeatInfo[0]) + ')')]);\r\n                });\r\n\r\n                return repeatElements;\r\n            },\r\n\r\n            // Match [-[letter|word]-]if-font(…) values (-[letter|word]- is optional)\r\n            _conditional: function(type, elements, rule) {\r\n                var usingConditional = rule.match(/^(?:-(letter|word)-)?if-font\\(([\\s\\S]+)\\)$/i);\r\n                if(!usingConditional) return;\r\n\r\n                var els = type === 'all'\r\n                        ? elements\r\n                        : type === 'word'\r\n                        ? elements.children('span')\r\n                        : elements.find('span > span'),\r\n                    isTransform = rule.match(/translate|rotate|skew|perspective/i),\r\n                    fonts = usingConditional[2].replace(/\\n/g, '').match(/['\"][^'\"]+['\"]:\\s*.+?(\\)|(?=\\w),\\s['\"]|$)/g),\r\n                    fontInfo, fontElements = {}, elementSet = [];\r\n                if(!fonts) return;\r\n\r\n                elements.each(function(i, el) {\r\n                    var fontInUse = unstack(el).replace(/^['\"](.+)['\"]$/g, '$1');\r\n                    if(!fontElements[fontInUse])\r\n                        fontElements[fontInUse] = [el];\r\n                    else\r\n                        fontElements[fontInUse].push(el);\r\n                });\r\n\r\n                $.each(fonts, function(index, font) {\r\n                    fontInfo = font.match(/['\"]([^'\"]+)['\"]:\\s*(.+)$/);\r\n                    if(!fontInfo) return true;\r\n                    fontInfo = fontInfo.splice(1);\r\n                    if(fontInfo[0] in fontElements)\r\n                        elementSet.push([$.trim(fontInfo[1]), $(fontElements[fontInfo[0]])]);\r\n                });\r\n\r\n                return elementSet;\r\n            },\r\n\r\n            // Parse and apply a CSS property\r\n            _applyAttribute: function(type, elements, attribute, values) {\r\n                var conditional = methods._conditional(type, elements, values);\r\n                if(!conditional || !conditional.length)\r\n                    conditional = [[values, elements]];\r\n\r\n                $.each(conditional, function(a, ve) {\r\n                    var vals = ve[0], els = ve[1];\r\n                    var custom = methods._pairs(type, els, vals)\r\n                        || methods._repeats(type, els, vals);\r\n                    if(custom) {\r\n                        $.each(custom, function(index, valEl) {\r\n                            if(typeof attribute !== 'string') {\r\n                                var attrs = {};\r\n                                $.each(attribute, function(a, attr) { attrs[attr] = valEl[0]; });\r\n                                valEl[1].css(attrs);\r\n                            } else {\r\n                                valEl[1].css(attribute, valEl[0]);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        var indexValues, keys, transformGroups;\r\n                        // check for transform groups, as we need to parse these slightly differently\r\n                        if(transformGroups = vals.match(/-transform-group\\(([\\s\\S]+?\\([^)]+\\))*?\\)/g)) {\r\n                            indexValues = $.map(transformGroups, function(val, i) {\r\n                                return val.replace(/-transform-group\\(([\\s\\S]+)\\)$/, '$1');\r\n                            });\r\n                        } else {\r\n                            indexValues = vals.replace(/[\\n\\s]+/g, ' ').split(' ');\r\n                        }\r\n\r\n                        els.each(function(i, el) {\r\n                            keys = type === 'all'\r\n                                ? $(el) // match the entire word (only used for certain use cases)\r\n                                : type === 'word'\r\n                                ? $(el).children('span')\r\n                                : $(el).find('span > span'); // letters are spans inside words\r\n                            $.each(indexValues, function(index, value) {\r\n                                if(typeof attribute !== 'string') {\r\n                                    var attrs = {};\r\n                                    $.each(attribute, function(a, attr) { attrs[attr] = value; });\r\n                                    keys.eq(index).css(attrs);\r\n                                } else {\r\n                                    keys.eq(index).css(attribute, value);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n\r\n            kern: function(type, elements, kerning) {\r\n                methods._applyAttribute(type, elements, 'margin-right', kerning);\r\n            },\r\n\r\n            size: function(type, elements, sizes) {\r\n                methods._applyAttribute(type, elements, 'font-size', sizes);\r\n            },\r\n\r\n            weight: function(type, elements, weights) {\r\n                methods._applyAttribute(type, elements, 'font-weight', weights);\r\n            },\r\n\r\n            color: function(type, elements, colors) {\r\n                methods._applyAttribute(type, elements, 'color', colors);\r\n            },\r\n\r\n            backgroundcolor: function(type, elements, colors) {\r\n                methods._applyAttribute(type, elements, 'background-color', colors);\r\n            },\r\n\r\n            transform: function(type, elements, transforms) {\r\n                var attributes = [\r\n                    '-webkit-transform'\r\n                    , '-moz-transform'\r\n                    , '-ms-transform'\r\n                    , '-o-transform'\r\n                    , 'transform'\r\n                ];\r\n                methods._applyAttribute(type, elements, attributes, transforms);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Scan the parsed CSS for properties we want, break them down and style them.\r\n         */\r\n        this._parse = function(css, ignoreParsed) {\r\n            if(!self._parsedCSS) self._parsedCSS = css; // cache the parsed CSS\r\n\r\n            for(var selector in css) {\r\n                for(var property in css[selector]) {\r\n                    var match,\r\n                        elements,\r\n                        value = css[selector][property];\r\n\r\n                    // Kerning.js prefixed selectors\r\n                    if(match = property.match(new RegExp('^(-' + browserPrefix + '|-' + osPrefix +')?-(letter|word)-(kern|transform|size|color|backgroundcolor|weight)', 'i'))) {\r\n                        var specificity = match[2].toLowerCase(),\r\n                            action = match[3].toLowerCase();\r\n\r\n                        elements = $(selector);\r\n                        if(ignoreParsed)\r\n                            elements = elements.not('.kerningjs');\r\n\r\n                        elements\r\n                            .not('.kerningjs')\r\n                            .addClass('kerningjs').css('visibility', 'inherit')\r\n                            .lettering('words').children('span').css('display', 'inline-block') // break down into words\r\n                            .lettering().children('span').css('display', 'inline-block'); // break down into letters\r\n\r\n                        if(methods[action])\r\n                            methods[action].call(this, specificity, elements, value);\r\n\r\n                        // existing selectors with Kerning.js-custom values\r\n                    } else if((match = property.match(/font-(size|weight)/i)) && value.match(/if-font/i)) {\r\n                        var action = match[1].toLowerCase();\r\n                        elements = $(selector);\r\n                        if(ignoreParsed)\r\n                            elements = elements.not('.kerningjs');\r\n\r\n                        elements\r\n                            .not('.kerningjs')\r\n                            .addClass('kerningjs').css('visibility', 'inherit');\r\n\r\n                        if(methods[action])\r\n                            methods[action].call(this, 'all', elements, value);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Automatically re-run the script when a DOM node is inserted. This *could potentially*\r\n         * hurt the performance of your page, so I strongly recommend benchmarking what affect\r\n         * this will have on your site.\r\n         */\r\n        this.live = function() {\r\n            // Technically, this event is \"depricated,\" but there isn't exactly a whole\r\n            // boatload of alternatives. Or any alternatives. At all. Not one.\r\n            $(document).bind('DOMNodeInserted', function(evt) {\r\n                if(evt.target) self.refresh(true);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Re-runs the parser to apply styles; to only apply to new elements, set newElementsOnly to true.\r\n         */\r\n        this.refresh = function(newElementsOnly) {\r\n            if(self._parsedCSS)\r\n                self._parse(self._parsedCSS, newElementsOnly);\r\n        };\r\n\r\n        // Run the parser on DOM load\r\n        $(function() {\r\n            $(document).parsecss(self._parse, true);\r\n        });\r\n    })();\r\n})(jQuery);"]}