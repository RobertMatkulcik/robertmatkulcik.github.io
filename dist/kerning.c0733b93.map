{"version":3,"sources":["js/kerning.js"],"names":["$","hasSameOrigin","url","replace","match","protocol","user","hostname","port","offset","string","window","location","undefined","substring","fn","findandfilter","selector","ret","filter","add","find","prevObject","parsecss","callback","parseAttributes","parse","str","each","innerHTML","end","disabled","href","mediumApplies","media","get","pathname","search","HTMLtext","styleAttributes","munge","s","rule","processAtRule","trim","split","i","css","length","restore","extend","parsedeclarations","query","style","appendTo","remove","isValidSelector","styleSheet","test","cssText","sheet","cssRules","parseArguments","mungedArguments","a","push","eval","err","munged","index","parsed","decl","slice","join","REbraces","REfull","REatcomment","REcomment_string","REmunged","uid","full","replacement","RE","exec","type","shift","pop","_show","show","hide","which","plugin","arguments","apply","data","$this","removeData","call","queue","dequeue","args","makeArray","name","effects","splice","RESGMLcomment","REnotATag","REtag","tags","tag","attrs","toLowerCase","id","injector","t","splitter","klass","after","text","inject","item","empty","append","methods","init","words","lines","r","children","replaceWith","lettering","method","error","unstack","fontunstack","elem","stack","analyzeStack","elems","generics","baseline","num_fonts","last_resort","inArray","font","testFont","requested_font","baseline_font","span","prepend","baseline_width","width","requested_width","element","Kerning","self","nav","navigator","platform","browserPrefix","document","documentElement","userAgent","indexOf","opera","reduce","pv","cv","osPrefix","_pairs","elements","pairString","usingPairs","els","isTransform","pairs","pairInfo","pairKeys","pairDown","pairElements","pair","char1","RegExp","nextWord","char2","next","html","parent","_repeats","repeatString","usingRepeats","repeats","repeatInfo","repeatKeys","repeatDown","repeatElements","repeat","_conditional","usingConditional","fonts","fontInfo","fontElements","elementSet","el","fontInUse","_applyAttribute","attribute","values","conditional","ve","vals","custom","valEl","attr","indexValues","keys","transformGroups","map","val","value","eq","kern","kerning","size","sizes","weight","weights","color","colors","backgroundcolor","transform","transforms","attributes","_parse","ignoreParsed","_parsedCSS","property","specificity","action","not","addClass","live","bind","evt","target","refresh","newElementsOnly","jQuery"],"mappings":"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","file":"kerning.c0733b93.map","sourceRoot":"..","sourcesContent":["/**\r\n * Created by hlbinamyslenia on 12/6/16.\r\n */\r\n/*global jQuery */\r\n/*!\r\n * Kerning.js\r\n * Version: 0.2.1\r\n * Copyright 2011 Joshua Gross\r\n * MIT license\r\n *\r\n * Usage:\r\n *  Include this file anywhere in your HTML\r\n *    <script src=\"kerning.js\"></script>\r\n *\r\n *  Then, add any of the attributes following to your CSS, under any\r\n *  selectors you want modified:\r\n *    -letter-kern, -letter-size, -letter-weight, -letter-color, -letter-transform\r\n *    -word-kern, -word-size, -word-weight, -word-color, -word-transform\r\n *\r\n *  To use pairings (e.g., modify 'a' if 'ab' is paired):\r\n *    -letter-pairs('xy': [value], …)\r\n *    -word-pairs('cat mouse': [value], …)\r\n *\r\n *  To use multiple transforms, you need to use transform \"groups\":\r\n *    -transform-group([transform] [transform] …)\r\n *\r\n *  Sometimes you need to want to use a different size or weight, depending on what\r\n *  font has loaded:\r\n *    font-size: [default size];\r\n *    font-size: if-font('font name': [size], 'font name': [size], …);\r\n *  (The first line is a fallback should Kerning.js not load. This is recommended.)\r\n *\r\n *  That's it! Attributes will be applied automagically.\r\n *\r\n * Examples:\r\n *  Alter first 3 letters:\r\n *    -letter-size: 100px 20px 30px;\r\n *\r\n *  Modify letter pairs:\r\n *    -letter-kern: -letter-pairs('ab': 1px,\r\n *                                'bc': 300px,\r\n *                                's ': 100px);\r\n *\r\n *  Transform the first two letters:\r\n *    -letter-transform: -transform-group(rotate3d(0,0,1,10deg) translate3d(0,10px,0))\r\n *                       -transform-group(translate3d(0,-10px,0) rotate3d(0,0,1,-10deg));\r\n *\r\n *  Modify word pairs:\r\n *    -word-size: -word-pairs('this is': 10em);\r\n *\r\n *  Modify the first 3 words:\r\n *    -word-size: 10em 0.1em 0.2em;\r\n *\r\n *  Using repeat rules:\r\n *    -letter-color: -letter-repeat(even: #f0f0f0, odd: #cccccc);\r\n *    -letter-color: -letter-repeat(2n+1: #f0f0f0);\r\n *\r\n *  Using conditionals:\r\n *    -letter-kern: if-font('Helvetica Neue': 0 1px 1px, 'Helvetica': 0 -1px 0);\r\n *\r\n *  Using conditionals on existing properties for weight or size:\r\n *    font-size: 9.5em;\r\n *    font-size: if-font('Helvetica Neue': 10em, 'Helvetica': 9em);\r\n */\r\n(function($){\r\n    /*!\r\n     * jQuery based CSS parser\r\n     * documentation: http://youngisrael-stl.org/wordpress/2009/01/16/jquery-css-parser/\r\n     * Version: 1.3\r\n     * Copyright (c) 2011 Daniel Wachsstock\r\n     * MIT license\r\n     */\r\n    (function() {\r\n        // utility function to determine whether or not a URL has the same origin as the current location\r\n        // See http://jsfiddle.net/35Jku/35/\r\n        var hasSameOrigin = function(url) {\r\n            return url === url.replace(/^([^\\/]*)\\/\\/([^@]*@)?([^\\/:]+)(:\\d+)?.*/, function(match, protocol, user, hostname, port, offset, string) {\r\n                    protocol = (protocol === \"\") ? window.location.protocol : protocol;\r\n                    port = (port === undefined) ? \"\" : port.substring(1);\r\n                    if (protocol !== window.location.protocol)\r\n                        return \"\"; // \"protocol mismatch: \" + protocol + \" vs. \" + window.location.protocol\r\n                    if (hostname !== window.location.hostname)\r\n                        return \"\"; // \"hostname mismatch: \" + hostname + \" vs. \" + window.location.hostname\r\n                    if (port !== window.location.port)\r\n                        return \"\"; // \"port mismatch: \" + port + \" vs. \" + window.location.port\r\n                    return url;\r\n                });\r\n        }\r\n        // utility function, since we want to allow $('style') and $(document), so we need to look for elements in the jQuery object ($.fn.filter) and elements that are children of the jQuery object ($.fn.find)\r\n        $.fn.findandfilter = function(selector) {\r\n            var ret = this.filter(selector).add(this.find(selector));\r\n            ret.prevObject = ret.prevObject.prevObject; // maintain the filter/end chain correctly (the filter and the find both push onto the chain).\r\n            return ret;\r\n        };\r\n\r\n        $.fn.parsecss = function(callback, parseAttributes) {\r\n            var parse = function(str) { $.parsecss(str, callback) }; // bind the callback\r\n            this.findandfilter('style')\r\n                .each(function(){\r\n                    parse(this.innerHTML);\r\n                })\r\n                .end()\r\n                .findandfilter('link[type=\"text/css\"],link[rel=\"stylesheet\"]')\r\n                .each(function(){\r\n                    // only get the stylesheet if it's not disabled, it won't trigger cross-site security (doesn't start with anything like http:) and it uses the appropriate media)\r\n                    if(!this.disabled && hasSameOrigin(this.href) && $.parsecss.mediumApplies(this.media))\r\n                        $.get(this.href, parse);\r\n                })\r\n                .end();\r\n\r\n            if(parseAttributes) {\r\n                $.get(location.pathname+location.search, 'text', function(HTMLtext) {\r\n                    styleAttributes(HTMLtext, callback);\r\n                });\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        $.parsecss = function(str, callback) {\r\n            var ret = {};\r\n            str = munge(str).replace(/@(([^;`]|`[^b]|`b[^%])*(`b%)?);?/g, function(s, rule) {\r\n                // @rules end with ; or a block, with the semicolon not being part of the rule but the closing brace (represented by `b%) is\r\n                processAtRule($.trim(rule), callback);\r\n                return '';\r\n            });\r\n\r\n            $.each(str.split('`b%'), function(i, css) { // split on the end of a block\r\n                css = css.split('%b`'); // css[0] is the selector; css[1] is the index in munged for the cssText\r\n                if (css.length < 2) return; // invalid css\r\n                css[0] = restore(css[0]);\r\n                ret[css[0]] = $.extend(ret[css[0]] || {}, parsedeclarations(css[1]));\r\n            });\r\n            callback(ret);\r\n        };\r\n        // explanation of the above: munge(str) strips comments and encodes strings and brace-delimited blocks, so that\r\n        // %b` corresponds to { and `b% corresponds to }\r\n        // munge(str) replaces blocks with %b`1`b% (for example)\r\n        //\r\n        // str.split('`b%') splits the text by '}' (which ends every CSS statement)\r\n        // Each so the each(munge(str... function(i,css)\r\n        // is called with css being empty (the string after the last delimiter), an @rule, or a css statement of the form\r\n        // selector %b`n where n is a number (the block was turned into %b`n`b% by munge). Splitting on %b` gives the selector and the\r\n        // number corresponding to the declaration block. parsedeclarations will do restore('%b`'+n+'`b%') to get it back.\r\n\r\n        // if anyone ever implements http://www.w3.org/TR/cssom-view/#the-media-interface, we're ready\r\n        $.parsecss.mediumApplies = (window.media && window.media.query) || function(str) {\r\n                if(!str) return true; // if no descriptor, everything applies\r\n                if(str in media) return media[str];\r\n                var style = $('<style media=\"'+str+'\">body {position: relative; z-index: 1;}</style>').appendTo('head');\r\n                return media[str] = [$('body').css('z-index')==1, style.remove()][0]; // the [x,y][0] is a silly hack to evaluate two expressions and return the first\r\n            };\r\n\r\n        $.parsecss.isValidSelector = function(str) {\r\n            var s = $('<style>'+str+'{}</style>').appendTo('head')[0];\r\n            // s.styleSheet is IE; it accepts illegal selectors but converts them to UNKNOWN. Standards-based (s.shee.cssRules) just reject the rule\r\n            return [s.styleSheet ? !/UNKNOWN/i.test(s.styleSheet.cssText) : !!s.sheet.cssRules.length, $(s).remove()][0]; // the [x,y][0] is a silly hack to evaluate two expressions and return the first\r\n        };\r\n\r\n        $.parsecss.parseArguments = function(str) {\r\n            if(!str) return [];\r\n            var ret = [], mungedArguments = munge(str, true).split(/\\s+/); // can't use $.map because it flattens arrays !\r\n            for (var i = 0; i < mungedArguments.length; ++i) {\r\n                var a = restore(mungedArguments[i]);\r\n                try {\r\n                    ret.push(eval('('+a+')'));\r\n                } catch(err) {\r\n                    ret.push(a);\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        // expose the styleAttributes function\r\n        $.parsecss.styleAttributes = styleAttributes;\r\n\r\n        // caches\r\n        var media = {}; // media description strings\r\n        var munged = {}; // strings that were removed by the parser so they don't mess up searching for specific characters\r\n\r\n        // private functions\r\n\r\n        function parsedeclarations(index) { // take a string from the munged array and parse it into an object of property: value pairs\r\n            var str = munged[index].replace(/^{|}$/g, ''); // find the string and remove the surrounding braces\r\n            str = munge(str); // make sure any internal braces or strings are escaped\r\n            var parsed = {};\r\n            $.each(str.split(';'), function (i, decl) {\r\n                decl = decl.split(':');\r\n                if(decl.length < 2) return;\r\n                parsed[restore(decl[0])] = restore(decl.slice(1).join(':'));\r\n            });\r\n            return parsed;\r\n        }\r\n\r\n        // replace strings and brace-surrounded blocks with %s`number`s% and %b`number`b%. By successively taking out the innermost\r\n        // blocks, we ensure that we're matching braces. No way to do this with just regular expressions. Obviously, this assumes no one\r\n        // would use %s` in the real world.\r\n        // Turns out this is similar to the method that Dean Edwards used for his CSS parser in IE7.js (http://code.google.com/p/ie7-js/)\r\n        var REbraces = /{[^{}]*}/;\r\n        var REfull = /\\[[^\\[\\]]*\\]|{[^{}]*}|\\([^()]*\\)|function(\\s+\\w+)?(\\s*%b`\\d+`b%){2}/; // match pairs of parentheses, brackets, and braces and function definitions.\r\n        var REatcomment = /\\/\\*@((?:[^\\*]|\\*[^\\/])*)\\*\\//g; // comments of the form /*@ text */ have text parsed\r\n        // we have to combine the comments and the strings because comments can contain string delimiters and strings can contain comment delimiters\r\n        // var REcomment = /\\/\\*(?:[^\\*]|\\*[^\\/])*\\*\\/|<!--|-->/g; // other comments are stripped. (this is a simplification of real SGML comments (see http://htmlhelp.com/reference/wilbur/misc/comment.html) , but it's what real browsers use)\r\n        // var REstring = /\\\\.|\"(?:[^\\\\\\\"]|\\\\.|\\\\\\n)*\"|'(?:[^\\\\\\']|\\\\.|\\\\\\n)*'/g; //  match escaped characters and strings\r\n        var REcomment_string = /(?:\\/\\*(?:[^\\*]|\\*[^\\/])*\\*\\/)|(\\\\.|\"(?:[^\\\\\\\"]|\\\\.|\\\\\\n)*\"|'(?:[^\\\\\\']|\\\\.|\\\\\\n)*')/g;\r\n        var REmunged = /%\\w`(\\d+)`\\w%/;\r\n        var uid = 0; // unique id number\r\n        function munge(str, full) {\r\n            str = str\r\n                .replace(REatcomment,'$1') // strip /*@ comments but leave the text (to let invalid CSS through)\r\n                .replace(REcomment_string, function (s, string) { // strip strings and escaped characters, leaving munged markers, and strip comments\r\n                    if (!string) return '';\r\n                    var replacement = '%s`'+(++uid)+'`s%';\r\n                    munged[uid] = string.replace(/^\\\\/,''); // strip the backslash now\r\n                    return replacement;\r\n                });\r\n            // need a loop here rather than .replace since we need to replace nested braces\r\n            var RE = full ? REfull : REbraces;\r\n            while(match = RE.exec(str)) {\r\n                replacement = '%b`'+(++uid)+'`b%';\r\n                munged[uid] = match[0];\r\n                str = str.replace(RE, replacement);\r\n            }\r\n            return str;\r\n        }\r\n\r\n        function restore(str) {\r\n            if(str === undefined) return str;\r\n            while(match = REmunged.exec(str)) {\r\n                str = str.replace(REmunged, munged[match[1]]);\r\n            }\r\n            return $.trim(str);\r\n        }\r\n\r\n        function processAtRule (rule, callback) {\r\n            var split = rule.split(/\\s+/); // split on whitespace\r\n            var type = split.shift(); // first word\r\n            if(type=='media') {\r\n                var css = restore(split.pop()).slice(1, -1); // last word is the rule; need to strip the outermost braces\r\n                if($.parsecss.mediumApplies(split.join(' '))) {\r\n                    $.parsecss(css, callback);\r\n                }\r\n            } else if (type=='import') {\r\n                var url = restore(split.shift());\r\n                if($.parsecss.mediumApplies(split.join(' '))) {\r\n                    url = url.replace(/^url\\(|\\)$/gi, '').replace(/^[\"']|[\"']$/g, ''); // remove the url('...') wrapper\r\n                    $.get(url, function(str) { $.parsecss(str, callback) });\r\n                }\r\n            }\r\n        }\r\n\r\n        // override show and hide. $.data(el, 'showDefault') is a function that is to be used for show if no arguments are passed in (if there are arguments, they override the stored function)\r\n        // Many of the effects call the native show/hide() with no arguments, resulting in an infinite loop.\r\n        var _show = {show: $.fn.show, hide: $.fn.hide}; // save the originals\r\n        $.each(['show', 'hide'], function() {\r\n            var which = this, show = _show[which], plugin = which+'Default';\r\n            $.fn[which] = function(){\r\n                if(arguments.length > 0) return show.apply(this, arguments);\r\n                return this.each(function() {\r\n                    var fn = $.data(this, plugin), $this = $(this);\r\n                    if(fn) {\r\n                        $.removeData(this, plugin); // prevent the infinite loop\r\n                        fn.call($this);\r\n                        $this.queue(function() { $this.data(plugin, fn).dequeue() }); // put the function back at the end of the animation\r\n                    } else {\r\n                        show.call($this);\r\n                    }\r\n                });\r\n            };\r\n            $.fn[plugin] = function() {\r\n                var args = $.makeArray(arguments), name = args[0];\r\n                if($.fn[name]) { // a plugin\r\n                    args.shift();\r\n                    var fn = $.fn[name];\r\n                } else if($.effects && $.effects[name]) { // a jQuery UI effect. They require an options object as the second argument\r\n                    if(typeof args[1] != 'object') args.splice(1, 0, {});\r\n                    fn = _show[which];\r\n                } else { // regular show/hide\r\n                    fn = _show[which];\r\n                }\r\n                return this.data(plugin, function() { fn.apply(this,args) });\r\n            };\r\n        });\r\n\r\n        // experimental: find unrecognized style attributes in elements by reloading the code as text\r\n        var RESGMLcomment = /<!--([^-]|-[^-])*-->/g; // as above, a simplification of real comments. Don't put -- in your HTML comments!\r\n        var REnotATag = /(>)[^<]*/g;\r\n        var REtag = /<(\\w+)([^>]*)>/g;\r\n\r\n        function styleAttributes(HTMLtext, callback) {\r\n            var ret = '', style, tags = {}; //  keep track of tags so we can identify elements unambiguously\r\n            HTMLtext = HTMLtext.replace(RESGMLcomment, '').replace(REnotATag, '$1');\r\n            munge(HTMLtext).replace(REtag, function(s, tag, attrs) {\r\n                tag = tag.toLowerCase();\r\n                if(tags[tag]) ++tags[tag]; else tags[tag] = 1;\r\n                if(style = /\\bstyle\\s*=\\s*(%s`\\d+`s%)/i.exec(attrs)) { // style attributes must be of the form style = \"a: bc\" ; they must be in quotes. After munging, they are marked with numbers. Grab that number\r\n                    var id = /\\bid\\s*=\\s*(\\S+)/i.exec(attrs); // find the id if there is one.\r\n                    if (id) id = '#'+restore(id[1]).replace(/^['\"]|['\"]$/g,''); else id = tag + ':eq(' + (tags[tag]-1) + ')';\r\n                    ret += [id, '{', restore(style[1]).replace(/^['\"]|['\"]$/g,''),'}'].join('');\r\n                }\r\n            });\r\n            $.parsecss(ret, callback);\r\n        }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Lettering.JS 0.6.1\r\n     *\r\n     * Copyright 2010, Dave Rupert http://daverupert.com\r\n     * Released under the WTFPL license\r\n     * http://sam.zoy.org/wtfpl/\r\n     *\r\n     * Thanks to Paul Irish - http://paulirish.com - for the feedback.\r\n     *\r\n     * Date: Mon Sep 20 17:14:00 2010 -0600\r\n     */\r\n    (function() {\r\n        function injector(t, splitter, klass, after) {\r\n            var a = t.text().split(splitter), inject = '';\r\n            if (a.length) {\r\n                $(a).each(function(i, item) {\r\n                    inject += '<span class=\"'+klass+(i+1)+'\">'+item+'</span>'+after;\r\n                });\r\n                t.empty().append(inject);\r\n            }\r\n        }\r\n\r\n        var methods = {\r\n            init: function() {\r\n                return this.each(function() {\r\n                    injector($(this), '', 'char', '');\r\n                });\r\n            },\r\n\r\n            words: function() {\r\n                return this.each(function() {\r\n                    injector($(this), ' ', 'word', ' ');\r\n                });\r\n            },\r\n\r\n            lines: function() {\r\n                return this.each(function() {\r\n                    var r = \"eefec303079ad17405c889e092e105b0\";\r\n                    // Because it's hard to split a <br/> tag consistently across browsers,\r\n                    // (*ahem* IE *ahem*), we replaces all <br/> instances with an md5 hash\r\n                    // (of the word \"split\").  If you're trying to use this plugin on that\r\n                    // md5 hash string, it will fail because you're being ridiculous.\r\n                    injector($(this).children(\"br\").replaceWith(r).end(), r, 'line', '');\r\n                });\r\n            }\r\n        };\r\n\r\n        $.fn.lettering = function(method) {\r\n            // Method calling logic\r\n            if (method && methods[method]) {\r\n                return methods[method].apply(this, [].slice.call( arguments, 1 ));\r\n            } else if (method === 'letters' || !method) {\r\n                return methods.init.apply(this, [].slice.call( arguments, 0 )); // always pass an array\r\n            }\r\n            $.error('Method ' +  method + ' does not exist on jQuery.lettering');\r\n            return this;\r\n        };\r\n    })();\r\n\r\n\r\n    /*\r\n     *  Adapted from Font UnStack 0.1\r\n     *\r\n     *  Developed by Phil Oye\r\n     *  Copyright (c) 2009 Phil Oye, http://philoye.com/\r\n     *\r\n     *  Licensed under the MIT license:\r\n     *  http://www.opensource.org/licenses/mit-license.php\r\n     *\r\n     */\r\n    var unstack = (function() {\r\n        var fontunstack = {\r\n            init: function(elem){\r\n                var stack = $(elem).css('font-family').match(/[^'\",;\\s][^'\",;]*/g) || [];\r\n                return this.analyzeStack(stack, elem);\r\n            },\r\n\r\n            analyzeStack: function(stack, elems) {\r\n                var generics = [\"monospace\", \"sans-serif\", \"serif\", \"cursive\", \"fantasy\"];\r\n                var baseline = generics[0];\r\n                var num_fonts = stack.length;\r\n                var last_resort = stack[num_fonts - 1];\r\n\r\n                // If author hasn't included a generic (tsk, tsk), let's add one\r\n                if($.inArray(last_resort, generics)) {\r\n                    stack.push(baseline);\r\n                    num_fonts++;\r\n                }\r\n\r\n                // If the generic is the same as our baseline, let's use another.\r\n                if(last_resort == baseline) {\r\n                    baseline = generics[1];\r\n                };\r\n\r\n                // At this point we're sure there is a generic fallback font, so we'll only iterate though the non-generics.\r\n                for(var i=0; i < num_fonts - 1; i++) {\r\n                    font = stack[i];\r\n                    if(fontunstack.testFont(font, baseline)) {\r\n                        return font;\r\n                    }\r\n                }\r\n            },\r\n\r\n            testFont: function(requested_font, baseline_font) {\r\n                var span = $('<span id=\"font_tester\" style=\"font-family:' + baseline_font + '; font-size:144px;position:absolute;left:-10000px;top:-10000px;visibility:hidden;\">mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmml</span>');\r\n                $(\"body\").prepend(span);\r\n\r\n                var baseline_width = span.width();\r\n                span.css(\"font-family\", requested_font + \",\" + baseline_font );\r\n                var requested_width = span.width();\r\n                span.remove();\r\n\r\n                // If the dimensions change, the font is installed\r\n                return (requested_width != baseline_width);\r\n            }\r\n        };\r\n\r\n        return function(element) {\r\n            return fontunstack.init(element);\r\n        };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Kerning.js\r\n     */\r\n    window.Kerning = new (function() {\r\n        /* Test for browsers & OSes. Ugly, but type rendering differs between\r\n         * browsers and operating systems. We need CSS flags to allow for that.\r\n         */\r\n        var self = this\r\n            , nav = navigator.platform\r\n            , browserPrefix = [\r\n            'webkitTransform' in document.documentElement.style && 'webkit'\r\n            , navigator.userAgent.indexOf(\"MSIE\") > -1 && 'ms'\r\n            , \"MozTransform\" in document.documentElement.style && 'moz'\r\n            , window.opera && 'o'\r\n        ].reduce(function(pv, cv) { return pv + (cv || ''); })\r\n            , osPrefix = [\r\n            nav.match(/Mac/) && 'mac'\r\n            , nav.match(/Win/) && 'win'\r\n            , nav.match(/Linux/) && 'linux'\r\n        ].reduce(function(pv, cv) { return pv + (cv || ''); });\r\n\r\n        var methods = {\r\n            // Match -[letter|word]-pairs(…) values\r\n            _pairs: function(type, elements, pairString) {\r\n                // checks for the existence of the letter pair property, i.e.: -letter-pairs(…)\r\n                var usingPairs = pairString.match(/^-(letter|word)-pairs\\(([\\s\\S]+)\\)$/i);\r\n                if(!usingPairs || usingPairs[1] !== type) return false;\r\n\r\n                var els = type === 'word'\r\n                        ? elements.children('span') // for -word-pairs\r\n                        : elements.find('span > span') // for -letter-pairs\r\n\r\n                    // we parse the string slightly differently if a transform is used\r\n                    , isTransform = pairString.match(/translate|rotate|skew|perspective/i)\r\n\r\n                    // matches and splits the pairing rules\r\n                    , pairs = $.trim(usingPairs[2].replace(/,\\s+?'/g, \",'\").replace(/:\\s+?(\\d)/g, ':$1')).split(isTransform ? '),' : ',')\r\n\r\n                    , pairInfo, pairKeys, pairDown\r\n                    , pairElements = [];\r\n                if(!pairs) return;\r\n\r\n                $.each(pairs, function(index, pair) {\r\n                    pairInfo = pair.split(':');\r\n                    // match the content inside the pair (stripping the leading and tailing quotes)\r\n                    // pairs may not be in quotes, or may have quotes inside quotes (i.e., 'a\"'), so we\r\n                    // prefer to do this with a regex.\r\n                    pairInfo[0] = pairInfo[0].replace(/^['\"](.+)['\"]$/g, '$1');\r\n\r\n                    if(type === 'word')\r\n                        pairKeys = pairInfo[0].split(' ');\r\n                    else\r\n                        pairKeys = pairInfo[0];\r\n\r\n                    pairDown = function(index) {\r\n                        var char1 = $(this).text().match(new RegExp(pairKeys[0])),\r\n                            nextWord, char2;\r\n                        if(pairKeys[1] !== ' ') {\r\n                            char2 = ($(this).next().html() || '').match(new RegExp(pairKeys[1]));\r\n                        } else {\r\n                            nextWord = type == 'word'\r\n                                ? $(this).next('[class^=\"word\"]')\r\n                                // if one of the pairKeys is just a space and we're doing letter pairs,\r\n                                // we, instead, need to check for the existence of the next word,\r\n                                // since spaces aren't wrapped\r\n                                : $(this).parent().next('[class^=\"word\"]');\r\n                            char2 = (!$(this).next().length && nextWord.length);\r\n                        }\r\n                        return char1 && char2;\r\n                    };\r\n\r\n                    pairElements.push([pairInfo[1], els.filter(pairDown)]);\r\n                });\r\n\r\n                return pairElements;\r\n            },\r\n\r\n            // Match -[letter|word]-repeats(…) values\r\n            _repeats: function(type, elements, repeatString) {\r\n                var usingRepeats = repeatString.match(/^-(letter|word)-repeats\\(([\\s\\S]+)\\)$/i);\r\n                if(!usingRepeats || usingRepeats[1] !== type) return false;\r\n\r\n                var els = type === 'word'\r\n                        ? elements.children('span')\r\n                        : elements.find('span > span'),\r\n                    isTransform = repeatString.match(/translate|rotate|skew|perspective/i),\r\n                    repeats = $.trim(usingRepeats[2].replace(/,\\s+?'/g, \",'\").replace(/:\\s+?(\\d)/g, ':$1')).split(isTransform ? '),' : ','),\r\n                    repeatInfo, repeatKeys, repeatDown,\r\n                    repeatElements = [];\r\n                if(!repeats) return;\r\n\r\n                $.each(repeats, function(index, repeat) {\r\n                    repeatInfo = repeat.split(':');\r\n                    if(isTransform && repeatInfo[1].substring(repeatInfo[1].length - 1) !== ')')\r\n                        repeatInfo[1] += ')';\r\n                    repeatElements.push([$.trim(repeatInfo[1]), els.filter(':nth-child(' + $.trim(repeatInfo[0]) + ')')]);\r\n                });\r\n\r\n                return repeatElements;\r\n            },\r\n\r\n            // Match [-[letter|word]-]if-font(…) values (-[letter|word]- is optional)\r\n            _conditional: function(type, elements, rule) {\r\n                var usingConditional = rule.match(/^(?:-(letter|word)-)?if-font\\(([\\s\\S]+)\\)$/i);\r\n                if(!usingConditional) return;\r\n\r\n                var els = type === 'all'\r\n                        ? elements\r\n                        : type === 'word'\r\n                        ? elements.children('span')\r\n                        : elements.find('span > span'),\r\n                    isTransform = rule.match(/translate|rotate|skew|perspective/i),\r\n                    fonts = usingConditional[2].replace(/\\n/g, '').match(/['\"][^'\"]+['\"]:\\s*.+?(\\)|(?=\\w),\\s['\"]|$)/g),\r\n                    fontInfo, fontElements = {}, elementSet = [];\r\n                if(!fonts) return;\r\n\r\n                elements.each(function(i, el) {\r\n                    var fontInUse = unstack(el).replace(/^['\"](.+)['\"]$/g, '$1');\r\n                    if(!fontElements[fontInUse])\r\n                        fontElements[fontInUse] = [el];\r\n                    else\r\n                        fontElements[fontInUse].push(el);\r\n                });\r\n\r\n                $.each(fonts, function(index, font) {\r\n                    fontInfo = font.match(/['\"]([^'\"]+)['\"]:\\s*(.+)$/);\r\n                    if(!fontInfo) return true;\r\n                    fontInfo = fontInfo.splice(1);\r\n                    if(fontInfo[0] in fontElements)\r\n                        elementSet.push([$.trim(fontInfo[1]), $(fontElements[fontInfo[0]])]);\r\n                });\r\n\r\n                return elementSet;\r\n            },\r\n\r\n            // Parse and apply a CSS property\r\n            _applyAttribute: function(type, elements, attribute, values) {\r\n                var conditional = methods._conditional(type, elements, values);\r\n                if(!conditional || !conditional.length)\r\n                    conditional = [[values, elements]];\r\n\r\n                $.each(conditional, function(a, ve) {\r\n                    var vals = ve[0], els = ve[1];\r\n                    var custom = methods._pairs(type, els, vals)\r\n                        || methods._repeats(type, els, vals);\r\n                    if(custom) {\r\n                        $.each(custom, function(index, valEl) {\r\n                            if(typeof attribute !== 'string') {\r\n                                var attrs = {};\r\n                                $.each(attribute, function(a, attr) { attrs[attr] = valEl[0]; });\r\n                                valEl[1].css(attrs);\r\n                            } else {\r\n                                valEl[1].css(attribute, valEl[0]);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        var indexValues, keys, transformGroups;\r\n                        // check for transform groups, as we need to parse these slightly differently\r\n                        if(transformGroups = vals.match(/-transform-group\\(([\\s\\S]+?\\([^)]+\\))*?\\)/g)) {\r\n                            indexValues = $.map(transformGroups, function(val, i) {\r\n                                return val.replace(/-transform-group\\(([\\s\\S]+)\\)$/, '$1');\r\n                            });\r\n                        } else {\r\n                            indexValues = vals.replace(/[\\n\\s]+/g, ' ').split(' ');\r\n                        }\r\n\r\n                        els.each(function(i, el) {\r\n                            keys = type === 'all'\r\n                                ? $(el) // match the entire word (only used for certain use cases)\r\n                                : type === 'word'\r\n                                ? $(el).children('span')\r\n                                : $(el).find('span > span'); // letters are spans inside words\r\n                            $.each(indexValues, function(index, value) {\r\n                                if(typeof attribute !== 'string') {\r\n                                    var attrs = {};\r\n                                    $.each(attribute, function(a, attr) { attrs[attr] = value; });\r\n                                    keys.eq(index).css(attrs);\r\n                                } else {\r\n                                    keys.eq(index).css(attribute, value);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n\r\n            kern: function(type, elements, kerning) {\r\n                methods._applyAttribute(type, elements, 'margin-right', kerning);\r\n            },\r\n\r\n            size: function(type, elements, sizes) {\r\n                methods._applyAttribute(type, elements, 'font-size', sizes);\r\n            },\r\n\r\n            weight: function(type, elements, weights) {\r\n                methods._applyAttribute(type, elements, 'font-weight', weights);\r\n            },\r\n\r\n            color: function(type, elements, colors) {\r\n                methods._applyAttribute(type, elements, 'color', colors);\r\n            },\r\n\r\n            backgroundcolor: function(type, elements, colors) {\r\n                methods._applyAttribute(type, elements, 'background-color', colors);\r\n            },\r\n\r\n            transform: function(type, elements, transforms) {\r\n                var attributes = [\r\n                    '-webkit-transform'\r\n                    , '-moz-transform'\r\n                    , '-ms-transform'\r\n                    , '-o-transform'\r\n                    , 'transform'\r\n                ];\r\n                methods._applyAttribute(type, elements, attributes, transforms);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Scan the parsed CSS for properties we want, break them down and style them.\r\n         */\r\n        this._parse = function(css, ignoreParsed) {\r\n            if(!self._parsedCSS) self._parsedCSS = css; // cache the parsed CSS\r\n\r\n            for(var selector in css) {\r\n                for(var property in css[selector]) {\r\n                    var match,\r\n                        elements,\r\n                        value = css[selector][property];\r\n\r\n                    // Kerning.js prefixed selectors\r\n                    if(match = property.match(new RegExp('^(-' + browserPrefix + '|-' + osPrefix +')?-(letter|word)-(kern|transform|size|color|backgroundcolor|weight)', 'i'))) {\r\n                        var specificity = match[2].toLowerCase(),\r\n                            action = match[3].toLowerCase();\r\n\r\n                        elements = $(selector);\r\n                        if(ignoreParsed)\r\n                            elements = elements.not('.kerningjs');\r\n\r\n                        elements\r\n                            .not('.kerningjs')\r\n                            .addClass('kerningjs').css('visibility', 'inherit')\r\n                            .lettering('words').children('span').css('display', 'inline-block') // break down into words\r\n                            .lettering().children('span').css('display', 'inline-block'); // break down into letters\r\n\r\n                        if(methods[action])\r\n                            methods[action].call(this, specificity, elements, value);\r\n\r\n                        // existing selectors with Kerning.js-custom values\r\n                    } else if((match = property.match(/font-(size|weight)/i)) && value.match(/if-font/i)) {\r\n                        var action = match[1].toLowerCase();\r\n                        elements = $(selector);\r\n                        if(ignoreParsed)\r\n                            elements = elements.not('.kerningjs');\r\n\r\n                        elements\r\n                            .not('.kerningjs')\r\n                            .addClass('kerningjs').css('visibility', 'inherit');\r\n\r\n                        if(methods[action])\r\n                            methods[action].call(this, 'all', elements, value);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Automatically re-run the script when a DOM node is inserted. This *could potentially*\r\n         * hurt the performance of your page, so I strongly recommend benchmarking what affect\r\n         * this will have on your site.\r\n         */\r\n        this.live = function() {\r\n            // Technically, this event is \"depricated,\" but there isn't exactly a whole\r\n            // boatload of alternatives. Or any alternatives. At all. Not one.\r\n            $(document).bind('DOMNodeInserted', function(evt) {\r\n                if(evt.target) self.refresh(true);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Re-runs the parser to apply styles; to only apply to new elements, set newElementsOnly to true.\r\n         */\r\n        this.refresh = function(newElementsOnly) {\r\n            if(self._parsedCSS)\r\n                self._parse(self._parsedCSS, newElementsOnly);\r\n        };\r\n\r\n        // Run the parser on DOM load\r\n        $(function() {\r\n            $(document).parsecss(self._parse, true);\r\n        });\r\n    })();\r\n})(jQuery);"]}