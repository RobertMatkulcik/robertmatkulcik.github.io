{"version":3,"sources":["js/main.js"],"names":["jQuery","document","ready","modalTriggerBts","$","coverLayer","duration","firstCustomMinaAnimation","bezier","x1","y1","x2","y2","epsilon","curveX","t","v","curveY","derivativeCurveX","x","t0","t1","t2","d2","i","Math","abs","animateModal","paths","pathSteps","animationType","path1","path2","path3","animate","each","initModal","modalTrigger","modalTriggerId","attr","modal","svgCoverLayer","children","find","pathsArray","Snap","eq","data","on","event","preventDefault","addClass","removeClass","querySelector","addEventListener","url","http","XMLHttpRequest","onreadystatechange","readyState","status","palette","JSON","parse","responseText","result","documentElement","style","setProperty","open","send","stringify","model","setTimeout","fadeOut","hide"],"mappings":"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","file":"main.6dcaf358.map","sourceRoot":"..","sourcesContent":["jQuery(document).ready(function () {\r\n    var modalTriggerBts = $('a[data-type=\"cd-modal-trigger\"]'),\r\n        coverLayer = $('.cd-cover-layer');\r\n\r\n    /*\r\n     convert a cubic bezier value to a custom mina easing\r\n     http://stackoverflow.com/questions/25265197/how-to-convert-a-cubic-bezier-value-to-a-custom-mina-easing-snap-svg\r\n     */\r\n    var duration = 600,\r\n        epsilon = (1000 / 60 / duration) / 4,\r\n        firstCustomMinaAnimation = bezier(.63, .35, .48, .92, epsilon);\r\n\r\n    modalTriggerBts.each(function () {\r\n        initModal($(this));\r\n    });\r\n\r\n    function initModal(modalTrigger) {\r\n        var modalTriggerId = modalTrigger.attr('id'),\r\n            modal = $('.cd-modal[data-modal=\"' + modalTriggerId + '\"]'),\r\n            svgCoverLayer = modal.children('.cd-svg-bg'),\r\n            paths = svgCoverLayer.find('path'),\r\n            pathsArray = [];\r\n        //store Snap objects\r\n        pathsArray[0] = Snap('#' + paths.eq(0).attr('id')),\r\n            pathsArray[1] = Snap('#' + paths.eq(1).attr('id')),\r\n            pathsArray[2] = Snap('#' + paths.eq(2).attr('id'));\r\n\r\n        //store path 'd' attribute values\r\n        var pathSteps = [];\r\n        pathSteps[0] = svgCoverLayer.data('step1');\r\n        pathSteps[1] = svgCoverLayer.data('step2');\r\n        pathSteps[2] = svgCoverLayer.data('step3');\r\n        pathSteps[3] = svgCoverLayer.data('step4');\r\n        pathSteps[4] = svgCoverLayer.data('step5');\r\n        pathSteps[5] = svgCoverLayer.data('step6');\r\n\r\n        //open modal window\r\n        modalTrigger.on('click', function (event) {\r\n            event.preventDefault();\r\n            modal.addClass('modal-is-visible');\r\n            coverLayer.addClass('modal-is-visible');\r\n            animateModal(pathsArray, pathSteps, duration, 'open');\r\n        });\r\n\r\n        //close modal window\r\n        modal.on('click', '.modal-close', function (event) {\r\n            event.preventDefault();\r\n            modal.removeClass('modal-is-visible');\r\n            coverLayer.removeClass('modal-is-visible');\r\n            animateModal(pathsArray, pathSteps, duration, 'close');\r\n        });\r\n    }\r\n\r\n    function animateModal(paths, pathSteps, duration, animationType) {\r\n        var path1 = (animationType == 'open') ? pathSteps[1] : pathSteps[0],\r\n            path2 = (animationType == 'open') ? pathSteps[3] : pathSteps[2],\r\n            path3 = (animationType == 'open') ? pathSteps[5] : pathSteps[4];\r\n        paths[0].animate({'d': path1}, duration, firstCustomMinaAnimation);\r\n        paths[1].animate({'d': path2}, duration, firstCustomMinaAnimation);\r\n        paths[2].animate({'d': path3}, duration, firstCustomMinaAnimation);\r\n    }\r\n\r\n    function bezier(x1, y1, x2, y2, epsilon) {\r\n        //https://github.com/arian/cubic-bezier\r\n        var curveX = function (t) {\r\n            var v = 1 - t;\r\n            return 3 * v * v * t * x1 + 3 * v * t * t * x2 + t * t * t;\r\n        };\r\n\r\n        var curveY = function (t) {\r\n            var v = 1 - t;\r\n            return 3 * v * v * t * y1 + 3 * v * t * t * y2 + t * t * t;\r\n        };\r\n\r\n        var derivativeCurveX = function (t) {\r\n            var v = 1 - t;\r\n            return 3 * (2 * (t - 1) * t + v * v) * x1 + 3 * (-t * t * t + 2 * v * t) * x2;\r\n        };\r\n\r\n        return function (t) {\r\n\r\n            var x = t, t0, t1, t2, x2, d2, i;\r\n\r\n            // First try a few iterations of Newton's method -- normally very fast.\r\n            for (t2 = x, i = 0; i < 8; i++) {\r\n                x2 = curveX(t2) - x;\r\n                if (Math.abs(x2) < epsilon) return curveY(t2);\r\n                d2 = derivativeCurveX(t2);\r\n                if (Math.abs(d2) < 1e-6) break;\r\n                t2 = t2 - x2 / d2;\r\n            }\r\n\r\n            t0 = 0, t1 = 1, t2 = x;\r\n\r\n            if (t2 < t0) return curveY(t0);\r\n            if (t2 > t1) return curveY(t1);\r\n\r\n            // Fallback to the bisection method for reliability.\r\n            while (t0 < t1) {\r\n                x2 = curveX(t2);\r\n                if (Math.abs(x2 - x) < epsilon) return curveY(t2);\r\n                if (x > x2) t0 = t2;\r\n                else t1 = t2;\r\n                t2 = (t1 - t0) * .5 + t0;\r\n            }\r\n\r\n            // Failure\r\n            return curveY(t2);\r\n\r\n        };\r\n    };\r\n\r\n\r\n    document.querySelector(\".left-corner\").addEventListener(\"click\", function () {\r\n        var url = \"http://colormind.io/api/\";\r\n        var data = {\r\n            model: \"default\"\r\n        };\r\n\r\n        var http = new XMLHttpRequest();\r\n\r\n        http.onreadystatechange = function () {\r\n            if (http.readyState == 4 && http.status == 200) {\r\n                var palette = JSON.parse(http.responseText).result;\r\n                document.documentElement.style.setProperty('--color1', \"rgb(\"+palette[4][0] + \",\"+ palette[4][1] +\",\"+ palette[4][2]+\")\");\r\n                document.documentElement.style.setProperty('--color3', \"rgb(\"+palette[0][0] + \",\"+ palette[0][1] +\",\"+ palette[0][2]+\")\");\r\n                document.documentElement.style.setProperty('--color2', \"rgb(\"+palette[2][0] + \",\"+ palette[2][1] +\",\"+ palette[2][2]+\")\");\r\n\r\n                // --color1: rgb(50,53,64);\r\n                // --color2: rgb(211,84,78);\r\n\r\n                // --color1: #353B53;\r\n                // --color2: #6EA785;\r\n\r\n                // --color1: rgb(29,46,31);\r\n                // --color2: rgb(155,96,78);\r\n            }\r\n        };\r\n\r\n        http.open(\"POST\", url, true);\r\n        http.send(JSON.stringify(data));\r\n\r\n    });\r\n\r\n\r\n    setTimeout(function () {\r\n        $('.loading-container').fadeOut(function () {\r\n            $(this).hide();\r\n        });\r\n    }, 1100);\r\n});"]}